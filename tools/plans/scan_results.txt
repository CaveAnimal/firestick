E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\backups\firestickTASKS_20251014_163014.md:452: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\backups\firestickTASKS_20251015_133419.md:452: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\backups\firestickTASKS_20251015_134902.md:452: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\backups\firestickTASKS_20251015_140059.md:452: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\firestickEXAMPLES.md:1469: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\firestickEXAMPLES.md:2936: pip install optimum[onnxruntime]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\firestickTASKS.md:452: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:6: "https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:2: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:10: def warn_distutils_present():
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:3: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:11: if 'distutils' not in sys.modules:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:4: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:16: "Distutils was imported before Setuptools, but importing Setuptools "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:5: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:17: "also replaces the `distutils` module in `sys.modules`. This may lead "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:6: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:19: "using distutils directly, ensure that setuptools is installed in the "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:7: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:21: "that setuptools is always imported before distutils."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:8: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:25: def clear_distutils():
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:9: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:26: if 'distutils' not in sys.modules:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:10: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:31: "Setuptools is replacing distutils. Support for replacing "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:11: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:32: "an already imported distutils is deprecated. In the future, "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:12: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:39: if name == "distutils" or name.startswith("distutils.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:13: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:47: Allow selection of distutils by environment variable.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:14: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:49: which = os.environ.get('SETUPTOOLS_USE_DISTUTILS', 'local')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:15: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:54: "Reliance on distutils from stdlib is deprecated. Users "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:16: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:55: "must rely on setuptools to provide the distutils module. "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:17: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:56: "Avoid importing distutils or import setuptools first, "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:18: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:57: "and avoid setting SETUPTOOLS_USE_DISTUTILS=stdlib. "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:19: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:63: def ensure_local_distutils():
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:20: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:66: clear_distutils()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:21: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:68: # With the DistutilsMetaFinder in place,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:22: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:69: # perform an import to cause distutils to be
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:23: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:70: # loaded from setuptools._distutils. Ref #2906.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:24: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:72: importlib.import_module('distutils')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:25: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:75: core = importlib.import_module('distutils.core')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:26: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:76: assert '_distutils' in core.__file__, core.__file__
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:27: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:77: assert 'setuptools._distutils.log' not in sys.modules
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:28: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:82: Ensure that the local copy of distutils is preferred over stdlib.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:29: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:88: warn_distutils_present()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:30: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:89: ensure_local_distutils()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:31: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:100: class DistutilsMetaFinder:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:32: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:111: def spec_for_distutils(self):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:33: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:120: mod = importlib.import_module('setuptools._distutils')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:34: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:122: # There are a couple of cases where setuptools._distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:35: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:124: # - An older Setuptools without a local distutils is
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:36: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:132: class DistutilsLoader(importlib.abc.Loader):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:37: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:134: mod.__name__ = 'distutils'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:38: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:141: 'distutils', DistutilsLoader(), origin=mod.__file__
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:39: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:147: Suppress supplying distutils for CPython (build and tests).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:40: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:154: Ensure stdlib distutils when running under pip.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:41: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:159: clear_distutils()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:42: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:160: self.spec_for_distutils = lambda: None
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:43: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:183: Ensure stdlib distutils when running select tests under CPython.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:44: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:187: clear_distutils()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:45: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:188: self.spec_for_distutils = lambda: None
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:46: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:192: 'test.test_distutils',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:47: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:198: 'test.test_distutils',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:48: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:203: for name in DistutilsMetaFinder.sensitive_tests:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:49: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:205: DistutilsMetaFinder,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:50: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:207: DistutilsMetaFinder.spec_for_sensitive_tests,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:51: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:211: DISTUTILS_FINDER = DistutilsMetaFinder()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:52: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:215: DISTUTILS_FINDER in sys.meta_path or insert_shim()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:53: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:227: sys.meta_path.insert(0, DISTUTILS_FINDER)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:54: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:232: sys.meta_path.remove(DISTUTILS_FINDER)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:55: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\__init__.py:238: # DistutilsMetaFinder can only be disabled in Python < 3.12 (PEP 632)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:56: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\_distutils_hack\override.py:1: __import__('_distutils_hack').do_override()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:57: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\build\env.py:167: # `pip install --python` is nonfunctional on Gentoo debundled pip.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:58: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\build\env.py:169: # searching for pip could yield warnings from _distutils_hack,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:59: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\cli\cli.py:42: f"A new version of Chroma is available!\nIf you're using pip, run 'pip install --upgrade chromadb' to upgrade to version {latest}")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:60: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\config.py:43: Please `pip install chroma-migrate` and run `chroma-migrate` to migrate your data and then
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:61: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\data_loaders.py:16: "The PIL python package is not installed. Please install it with `pip install pillow`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:62: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\amazon_bedrock_embedding_function.py:23: installed, `pip install boto3`. Access & secret key are not supported.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:63: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\amazon_bedrock_embedding_function.py:94: "The boto3 python package is not installed. Please install it with `pip install boto3`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:64: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\baseten_embedding_function.py:28: "The openai python package is not installed. Please install it with `pip install openai`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:65: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\bm25_embedding_function.py:52: "The fastembed python package is not installed. Please install it with `pip install fastembed`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:66: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\bm25_embedding_function.py:101: "The fastembed python package is not installed. Please install it with `pip install fastembed`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:67: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\bm25_embedding_function.py:131: "The fastembed python package is not installed. Please install it with `pip install fastembed`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:68: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\chroma_cloud_qwen_embedding_function.py:51: "The httpx python package is not installed. Please install it with `pip install httpx`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:69: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\chroma_cloud_splade_embedding_function.py:36: "The httpx python package is not installed. Please install it with `pip install httpx`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:70: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\chroma_langchain_embedding_function.py:47: "The langchain_core python package is not installed. Please install it with `pip install langchain-core`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:71: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\cloudflare_workers_ai_embedding_function.py:45: "The httpx python package is not installed. Please install it with `pip install httpx`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:72: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\cohere_embedding_function.py:30: "The cohere python package is not installed. Please install it with `pip install cohere`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:73: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\cohere_embedding_function.py:37: "The PIL python package is not installed. Please install it with `pip install pillow`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:74: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\fastembed_sparse_embedding_function.py:49: "The fastembed python package is not installed. Please install it with `pip install fastembed`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:75: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\fastembed_sparse_embedding_function.py:81: "The fastembed python package is not installed. Please install it with `pip install fastembed`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:76: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\fastembed_sparse_embedding_function.py:111: "The fastembed python package is not installed. Please install it with `pip install fastembed`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:77: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\google_embedding_function.py:32: "The Google Generative AI python package is not installed. Please install it with `pip install google-generativeai`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:78: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\google_embedding_function.py:148: "The Google Generative AI python package is not installed. Please install it with `pip install google-generativeai`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:79: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\google_embedding_function.py:283: "The vertexai python package is not installed. Please install it with `pip install google-cloud-aiplatform`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:80: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\huggingface_embedding_function.py:34: "The httpx python package is not installed. Please install it with `pip install httpx`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:81: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\huggingface_embedding_function.py:150: "The httpx python package is not installed. Please install it with `pip install httpx`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:82: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\huggingface_sparse_embedding_function.py:43: "The sentence_transformers python package is not installed. Please install it with `pip install sentence_transformers`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:83: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\huggingface_sparse_embedding_function.py:74: "The sentence_transformers python package is not installed. Please install it with `pip install sentence_transformers`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:84: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\huggingface_sparse_embedding_function.py:111: "The sentence_transformers python package is not installed. Please install it with `pip install sentence_transformers`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:85: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\instructor_embedding_function.py:35: "The InstructorEmbedding python package is not installed. Please install it with `pip install InstructorEmbedding`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:86: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\jina_embedding_function.py:68: "The httpx python package is not installed. Please install it with `pip install httpx`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:87: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\jina_embedding_function.py:74: "The PIL python package is not installed. Please install it with `pip install pillow`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:88: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\mistral_embedding_function.py:25: "The mistralai python package is not installed. Please install it with `pip install mistralai`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:89: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\morph_embedding_function.py:37: "The openai python package is not installed. Please install it with `pip install openai`. "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:90: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\ollama_embedding_function.py:35: "The ollama python package is not installed. Please install it with `pip install ollama`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:91: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\onnx_mini_lm_l6_v2.py:73: "The onnxruntime python package is not installed. Please install it with `pip install onnxruntime`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:92: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\onnx_mini_lm_l6_v2.py:80: "The tokenizers python package is not installed. Please install it with `pip install tokenizers`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:93: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\onnx_mini_lm_l6_v2.py:87: "The tqdm python package is not installed. Please install it with `pip install tqdm`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:94: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\open_clip_embedding_function.py:45: "The open_clip python package is not installed. Please install it with `pip install open-clip-torch`. https://github.com/mlfoundations/open_clip"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:95: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\open_clip_embedding_function.py:52: "The torch python package is not installed. Please install it with `pip install torch`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:96: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\open_clip_embedding_function.py:59: "The PIL python package is not installed. Please install it with `pip install pillow`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:97: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py:50: "The openai python package is not installed. Please install it with `pip install openai`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:98: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\roboflow_embedding_function.py:59: "The PIL python package is not installed. Please install it with `pip install pillow`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:99: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\sentence_transformer_embedding_function.py:32: "The sentence_transformers python package is not installed. Please install it with `pip install sentence_transformers`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:100: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\text2vec_embedding_function.py:24: "The text2vec python package is not installed. Please install it with `pip install text2vec`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:101: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\together_ai_embedding_function.py:40: "The httpx python package is not installed. Please install it with `pip install httpx`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:102: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\chromadb\utils\embedding_functions\voyageai_embedding_function.py:40: "The voyageai python package is not installed. Please install it with `pip install voyageai`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:103: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\coloredlogs\converter\__init__.py:361: using ``pip install 'coloredlogs[cron]'``. The ``[cron]`` extra will pull
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:104: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\dotenv\cli.py:15: 'Run pip install "python-dotenv[cli]" to fix this.')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:105: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\faiss\loader.py:30: # so let's read Features in numpy.distutils.cpuinfo and search 'sve' entry
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:106: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\faiss\loader.py:41: # platform-dependent legacy fallback using numpy.distutils.cpuinfo
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:107: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\faiss\loader.py:43: import numpy.distutils.cpuinfo
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:108: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\faiss\loader.py:44: return "sve" in numpy.distutils.cpuinfo.cpu.info[0].get('Features', "").split()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:109: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\faiss\loader.py:70: import numpy.distutils.cpuinfo
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:110: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\faiss\loader.py:72: if "avx2" in numpy.distutils.cpuinfo.cpu.info[0].get('flags', ""):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:111: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\faiss\loader.py:74: if "avx512" in numpy.distutils.cpuinfo.cpu.info[0].get('flags', ""):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:112: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\faiss\loader.py:76: if "avx512_fp16" in numpy.distutils.cpuinfo.cpu.info[0].get('flags', ""):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:113: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\fsspec\implementations\smb.py:49: $ pip install smbprotocol
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:114: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\fsspec\implementations\smb.py:51: # pip install smbprotocol[kerberos]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:115: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\google\auth\transport\urllib3.py:46: "  pip install google-auth[urllib3]\n"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:116: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\google\oauth2\challenges.py:138: "It can be installed via `pip install pyu2f` or `pip install google-auth[reauth]`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:117: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\google\oauth2\credentials.py:70: key reauth feature. Dependency can be installed via `pip install pyu2f` or `pip install
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:118: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpcore\_async\__init__.py:15: "installed. Use 'pip install httpcore[http2]'."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:119: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpcore\_async\__init__.py:27: "installed. Use 'pip install httpcore[socks]'."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:120: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpcore\_sync\__init__.py:15: "installed. Use 'pip install httpcore[http2]'."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:121: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpcore\_sync\__init__.py:27: "installed. Use 'pip install httpcore[socks]'."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:122: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpx\__init__.py:24: "everything with: pip install 'httpx[cli]'"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:123: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpx\_client.py:682: "Make sure to install httpx using `pip install httpx[http2]`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:124: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpx\_client.py:1396: "Make sure to install httpx using `pip install httpx[http2]`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:125: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpx\_decoders.py:112: Requires `pip install brotlipy`. See: https://brotlipy.readthedocs.io/
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:126: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpx\_decoders.py:113: or   `pip install brotli`. See https://github.com/google/brotli
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:127: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpx\_decoders.py:123: "Make sure to install httpx using `pip install httpx[brotli]`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:128: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpx\_decoders.py:165: Requires `pip install zstandard`.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:129: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpx\_decoders.py:166: Can be installed as a dependency of httpx using `pip install httpx[zstd]`.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:130: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpx\_decoders.py:174: "Make sure to install httpx using `pip install httpx[zstd]`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:131: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpx\_transports\default.py:193: "Make sure to install httpx using `pip install httpx[socks]`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:132: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\httpx\_transports\default.py:337: "Make sure to install httpx using `pip install httpx[socks]`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:133: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\_login.py:345: " Colab) and you need the `ipywidgets` module: `pip install ipywidgets`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:134: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\_oauth.py:165: "Cannot initialize OAuth to due a missing library. Please run `pip install huggingface_hub[oauth]` or add "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:135: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\_oauth.py:261: "Cannot initialize OAuth to due a missing library. Please run `pip install huggingface_hub[oauth]` or add "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:136: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\_oauth.py:355: "Cannot initialize OAuth to due a missing library. Please run `pip install huggingface_hub[oauth]` or add "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:137: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\_tensorboard_logger.py:124: "You must have `tensorboard` installed to use `HFSummaryWriter`. Please run `pip install --upgrade"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:138: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\_webhooks_payload.py:32: " should be installed separately. Please run `pip install --upgrade pydantic` and retry."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:139: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\_webhooks_server.py:64: You must have `gradio` installed to use `WebhooksServer` (`pip install --upgrade gradio`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:140: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\_webhooks_server.py:100: "You must have `gradio` installed to use `WebhooksServer`. Please run `pip install --upgrade gradio`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:141: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\_webhooks_server.py:105: "You must have `fastapi` installed to use `WebhooksServer`. Please run `pip install --upgrade fastapi`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:142: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\_webhooks_server.py:251: You must have `gradio` installed to use `webhook_endpoint` (`pip install --upgrade gradio`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:143: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\cli\cache.py:49: "Please run 'pip install \"huggingface_hub[cli]\"' to install them.\n"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:144: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\commands\delete_cache.py:25: This dependency has to be installed with `pip install "huggingface_hub[cli]"`. Since
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:145: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\commands\delete_cache.py:91: ' the TUI.\nPlease run `pip install "huggingface_hub[cli]"` to install'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:146: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\fastai_utils.py:70: " `pip install fastcore==1.3.27`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:147: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\fastai_utils.py:108: " Install it with `pip install toml`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:148: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\file_download.py:407: " available in your environment. Try `pip install hf_transfer`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:149: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\file_download.py:423: " Try `pip install hf_transfer` or `pip install hf_xet`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:150: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\file_download.py:467: "using `pip install -U hf_transfer`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:151: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\file_download.py:591: 'Try `pip install "huggingface_hub[hf_xet]"` or `pip install hf_xet`.'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:152: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\file_download.py:1735: "For better performance, install the package with: `pip install huggingface_hub[hf_xet]` or `pip install hf_xet`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:153: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference\_client.py:1207: You must have `PIL` installed if you want to work with images (`pip install Pillow`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:154: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference\_client.py:1279: You must have `PIL` installed if you want to work with images (`pip install Pillow`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:155: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference\_client.py:1472: You must have `PIL` installed if you want to work with images (`pip install Pillow`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:156: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference\_client.py:2446: You must have `PIL` installed if you want to work with images (`pip install Pillow`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:157: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference\_common.py:110: raise ImportError("Please install aiohttp to use `AsyncInferenceClient` (`pip install aiohttp`).")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:158: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference\_common.py:119: raise ImportError("Please install numpy to use deal with embeddings (`pip install numpy`).")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:159: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference\_common.py:129: "Please install Pillow to use deal with images (`pip install Pillow`). If you don't want the image to be"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:160: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference\_generated\_async_client.py:1251: You must have `PIL` installed if you want to work with images (`pip install Pillow`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:161: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference\_generated\_async_client.py:1324: You must have `PIL` installed if you want to work with images (`pip install Pillow`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:162: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference\_generated\_async_client.py:1520: You must have `PIL` installed if you want to work with images (`pip install Pillow`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:163: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference\_generated\_async_client.py:2503: You must have `PIL` installed if you want to work with images (`pip install Pillow`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:164: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\inference_api.py:202: " Please install it (`pip install Pillow`) or pass"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:165: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\lfs.py:418: " not available in your environment. Try `pip install hf_transfer`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:166: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\lfs.py:424: "You are using an outdated version of `hf_transfer`. Consider upgrading to latest version to enable progress bars using `pip install -U hf_transfer`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:167: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\repocard.py:323: " install it with `pip install Jinja2`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:168: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\serialization\_torch.py:239: "You can install it with `pip install safetensors`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:169: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\serialization\_torch.py:254: "using safe serialization by installing `safetensors` with `pip install safetensors`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:170: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\serialization\_torch.py:628: "You can install it with `pip install safetensors`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:171: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\serialization\_torch.py:652: "Please install `torch` to load torch tensors. You can install it with `pip install torch`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:172: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\huggingface_hub\utils\_runtime.py:210: # it is installed with `pip install huggingface_hub[inference]` but it can happen when it is installed manually
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:173: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\humanfriendly\compat.py:72: from distutils.spawn import find_executable as which
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:174: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\jinja2\compiler.py:862: imp = import_.importname
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:175: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\joblib\backports.py:13: """Backport from deprecated distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:176: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\joblib\backports.py:61: """Backport from deprecated distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:177: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\networkx\conftest.py:56: "        Try `pip install -e .`, or change your PYTHONPATH\n"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:178: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\__init__.py:55: distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:179: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\__init__.py:56: Enhancements to distutils with support for
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:180: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\__init__.py:640: # __getattr__. Note that `distutils` (deprecated) and `array_api`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:181: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\__init__.py:775: elif attr == "distutils":
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:182: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\__init__.py:776: if 'distutils' in __numpy_submodules__:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:183: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\__init__.py:777: import numpy.distutils as distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:184: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\__init__.py:778: return distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:185: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\__init__.py:780: raise AttributeError("`numpy.distutils` is not available from "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:186: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\__init__.py:816: "distutils", "array_api"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:187: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\_core\tests\examples\cython\setup.py:7: from distutils.core import setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:188: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\_pyinstaller\hook-numpy.py:34: "distutils",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:189: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\_pyinstaller\hook-numpy.py:35: "numpy.distutils",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:190: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\_pytesttester.py:142: # Filter out distutils cpu warnings (could be localized to
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:191: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\_pytesttester.py:143: # distutils tests). ASV has problems with top level import,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:192: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\_pytesttester.py:145: from numpy.distutils import cpuinfo  # noqa: F401
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:193: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\_utils\_pep440.py:3: The LooseVersion and StrictVersion classes that distutils provides don't
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:194: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\conftest.py:227: 'numpy/distutils',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:195: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\conftest.py:231: 'numpy/f2py/_backends/_distutils.py',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:196: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\__init__.py:32: `numpy.distutils` directly from ``.f`` and/or ``.pyf`` files
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:197: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\_backends\__init__.py:5: elif name == "distutils":
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:198: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\_backends\__init__.py:6: from ._distutils import DistutilsBackend
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:199: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\_backends\__init__.py:7: return DistutilsBackend
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:200: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\_backends\_distutils.py:6: from numpy.distutils.core import Extension, setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:201: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\_backends\_distutils.py:7: from numpy.distutils.misc_util import dict_append
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:202: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\_backends\_distutils.py:8: from numpy.distutils.system_info import get_info
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:203: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\_backends\_distutils.py:14: class DistutilsBackend(Backend):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:204: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\_backends\_distutils.py:17: "\ndistutils has been deprecated since NumPy 1.26.x\n"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:205: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\_backends\_meson.py:148: # Same behavior as distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:206: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\_src_pyf.py:4: # START OF CODE VENDORED FROM `numpy.distutils.from_template`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:207: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\_src_pyf.py:246: # END OF CODE VENDORED FROM `numpy.distutils.from_template`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:208: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:39: import numpy.distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:209: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:40: has_numpy_distutils = 2
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:210: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:43: import numpy_distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:211: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:44: has_numpy_distutils = 1
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:212: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:46: print('Failed to import numpy_distutils:', e)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:213: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:47: has_numpy_distutils = 0
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:214: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:64: if has_numpy_distutils:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:215: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:66: if has_numpy_distutils == 2:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:216: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:67: print('Found numpy.distutils version %r in %r' % (
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:217: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:68: numpy.distutils.__version__,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:218: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:69: numpy.distutils.__file__))
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:219: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:71: print('Found numpy_distutils version %r in %r' % (
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:220: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:72: numpy_distutils.numpy_distutils_version.numpy_distutils_version,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:221: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:73: numpy_distutils.__file__))
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:222: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:79: if has_numpy_distutils == 1:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:223: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:81: 'Importing numpy_distutils.command.build_flib ...', end=' ')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:224: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:82: import numpy_distutils.command.build_flib as build_flib
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:225: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:96: 'error:', msg, '(ignore it, build_flib is obsolete for numpy.distutils 0.2.2 and up)')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:226: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:99: if has_numpy_distutils == 2:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:227: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:100: print('Importing numpy.distutils.fcompiler ...', end=' ')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:228: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:101: import numpy.distutils.fcompiler as fcompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:229: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:103: print('Importing numpy_distutils.fcompiler ...', end=' ')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:230: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:104: import numpy_distutils.fcompiler as fcompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:231: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:118: if has_numpy_distutils == 2:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:232: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:119: print('Importing numpy.distutils.cpuinfo ...', end=' ')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:233: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:120: from numpy.distutils.cpuinfo import cpuinfo
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:234: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:126: 'Importing numpy_distutils.command.cpuinfo ...', end=' ')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:235: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:127: from numpy_distutils.command.cpuinfo import cpuinfo
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:236: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:132: print('Importing numpy_distutils.cpuinfo ...', end=' ')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:237: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\diagnose.py:133: from numpy_distutils.cpuinfo import cpuinfo
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:238: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:138: --compiler=          Specify distutils C compiler type [NO_MESON]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:239: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:163: The supported backends are 'meson' and 'distutils'.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:240: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:164: If not specified, defaults to 'distutils'. On
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:241: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:170: by numpy.distutils/system_info.py. E.g. to link
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:242: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:571: parser.add_argument("--backend", choices=['meson', 'distutils'], default='distutils')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:243: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:584: if MESON_ONLY_VER and backend_key == 'distutils':
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:244: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:585: outmess("Cannot use distutils backend with Python>=3.12,"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:245: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:653: # TODO: Once distutils is dropped completely, i.e. min_ver >= 3.12, unify into --fflags
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:246: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:655: reg_distutils_flags = re.compile(r'--((f(77|90)exec|opt|arch)=|(debug|noopt|noarch|help-fcompiler))')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:247: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:657: distutils_flags = [_m for _m in sys.argv[1:] if reg_distutils_flags.match(_m)]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:248: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:659: fc_flags.extend(distutils_flags)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:249: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:660: sys.argv = [_m for _m in sys.argv if _m not in (fc_flags + distutils_flags)]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:250: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:672: from numpy.distutils import fcompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:251: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:779: from numpy.distutils.system_info import show_all
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:252: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\tests\test_f2py2e.py:237: def test_no_py312_distutils_fcompiler(capfd, hello_world_f90, monkeypatch):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:253: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\tests\test_f2py2e.py:238: """Check that no distutils imports are performed on 3.12
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:254: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\tests\test_f2py2e.py:239: CLI :: --fcompiler --help-link --backend distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:255: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\tests\test_f2py2e.py:260: sys, "argv", f"f2py {ipath} -c -m {MNAME} --backend distutils".split()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:256: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\tests\test_f2py2e.py:265: assert "Cannot use distutils backend with Python>=3.12" in out
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:257: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\tests\test_f2py2e.py:820: # Numpy distutils flags
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:258: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\f2py\tests\test_pyf_src.py:1: # This test is ported from numpy.distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:259: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\lib\_utils_impl.py:69: " Install it by `pip install threadpoolctl`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:260: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\lib\_version.py:4: The LooseVersion and StrictVersion classes that distutils provides don't
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:261: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\testing\_private\utils.py:1395: from numpy.distutils.misc_util import exec_mod_from_location
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:262: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:147: "distutils",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:263: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:148: "distutils.cpuinfo",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:264: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:149: "distutils.exec_command",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:265: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:150: "distutils.misc_util",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:266: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:151: "distutils.log",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:267: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:152: "distutils.system_info",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:268: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:210: "distutils.armccompiler",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:269: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:211: "distutils.fujitsuccompiler",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:270: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:212: "distutils.ccompiler",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:271: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:213: 'distutils.ccompiler_opt',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:272: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:214: "distutils.command",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:273: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:215: "distutils.command.autodist",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:274: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:216: "distutils.command.bdist_rpm",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:275: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:217: "distutils.command.build",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:276: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:218: "distutils.command.build_clib",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:277: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:219: "distutils.command.build_ext",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:278: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:220: "distutils.command.build_py",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:279: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:221: "distutils.command.build_scripts",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:280: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:222: "distutils.command.build_src",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:281: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:223: "distutils.command.config",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:282: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:224: "distutils.command.config_compiler",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:283: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:225: "distutils.command.develop",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:284: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:226: "distutils.command.egg_info",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:285: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:227: "distutils.command.install",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:286: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:228: "distutils.command.install_clib",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:287: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:229: "distutils.command.install_data",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:288: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:230: "distutils.command.install_headers",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:289: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:231: "distutils.command.sdist",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:290: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:232: "distutils.conv_template",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:291: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:233: "distutils.core",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:292: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:234: "distutils.extension",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:293: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:235: "distutils.fcompiler",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:294: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:236: "distutils.fcompiler.absoft",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:295: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:237: "distutils.fcompiler.arm",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:296: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:238: "distutils.fcompiler.compaq",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:297: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:239: "distutils.fcompiler.environment",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:298: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:240: "distutils.fcompiler.g95",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:299: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:241: "distutils.fcompiler.gnu",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:300: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:242: "distutils.fcompiler.hpux",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:301: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:243: "distutils.fcompiler.ibm",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:302: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:244: "distutils.fcompiler.intel",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:303: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:245: "distutils.fcompiler.lahey",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:304: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:246: "distutils.fcompiler.mips",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:305: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:247: "distutils.fcompiler.nag",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:306: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:248: "distutils.fcompiler.none",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:307: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:249: "distutils.fcompiler.pathf95",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:308: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:250: "distutils.fcompiler.pg",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:309: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:251: "distutils.fcompiler.nv",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:310: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:252: "distutils.fcompiler.sun",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:311: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:253: "distutils.fcompiler.vast",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:312: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:254: "distutils.fcompiler.fujitsu",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:313: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:255: "distutils.from_template",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:314: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:256: "distutils.intelccompiler",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:315: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:257: "distutils.lib2def",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:316: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:258: "distutils.line_endings",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:317: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:259: "distutils.mingw32ccompiler",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:318: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:260: "distutils.msvccompiler",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:319: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:261: "distutils.npy_pkg_config",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:320: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:262: "distutils.numpy_distribution",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:321: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:263: "distutils.pathccompiler",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:322: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:264: "distutils.unixccompiler",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:323: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:282: SKIP_LIST = ["numpy.distutils.msvc9compiler"]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:324: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:322: 'numpy.distutils.log.sys',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:325: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:323: 'numpy.distutils.log.logging',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:326: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\tests\test_public_api.py:324: 'numpy.distutils.log.warnings',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:327: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\numpy\typing\tests\test_isfile.py:25: FILES += [ROOT / "distutils" / "__init__.pyi"]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:328: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnx\helper.py:312: imp = model.opset_import.add()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:329: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\__init__.py:251: print("please `pip install py-cpuinfo py3nvml` to show device information.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:330: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\__init__.py:253: print("please `pip install psutil` to show loaded DLLs.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:331: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\quantization\matmul_nbits_quantizer.py:304: "Error: The 'torch' library is required but not installed. Please install it using 'pip install torch'."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:332: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\quantization\matmul_nbits_quantizer.py:315: "Error: The 'datasets' library is required but not installed. Please install it using 'pip install datasets'."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:333: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\quantization\matmul_nbits_quantizer.py:327: "Error: The 'transformers' library is required but not installed. Please install it using 'pip install transformers'."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:334: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\quantization\matmul_nbits_quantizer.py:1181: "Please ensure that the 'modelopt' package is installed. Please install it using pip install nvidia_modelopt."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:335: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\quantization\matmul_nbits_quantizer.py:1184: "modelopt is not installed. Please install it using pip install nvidia_modelopt. Exiting."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:336: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\transformers\models\llama\benchmark_e2e.py:12: # $ pip install huggingface_hub
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:337: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\transformers\models\llama\benchmark_e2e.py:22: # $ pip install onnxruntime-gpu
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:338: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\transformers\models\llama\benchmark_e2e.py:26: # $ pip install flash-attn --no-build-isolation
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:339: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\transformers\models\llama\benchmark_e2e.py:30: # $ pip install bitsandbytes
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:340: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\transformers\models\longformer\convert_to_onnx.py:20: #   python3 -m pip install torch==1.9.0+cu111 torchvision==0.10.0+cu111 torchaudio==0.9.0 -f https://download.pytorch.org/whl/torch_stable.html
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:341: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\transformers\models\longformer\convert_to_onnx.py:21: #   python3 -m pip install coloredlogs flatbuffers numpy packaging sympy protobuf==3.20.1 onnx==1.12.0 transformers==4.18.0
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:342: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\transformers\models\longformer\convert_to_onnx.py:22: #   python3 -m pip install -i https://test.pypi.org/simple/ ort-nightly-gpu
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:343: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\transformers\models\whisper\whisper_helper.py:810: install_cmd = "pip install datasets"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:344: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\onnxruntime\transformers\models\whisper\whisper_jump_times.py:204: install_cmd = "pip install ninja"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:345: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\conftest.py:24: # 'pip install -e .[dev]' when switching between checkouts and running tests.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:346: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\exporters\onnx\__main__.py:195: "Please install it with `pip install sentence-transformers`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:347: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\exporters\onnx\__main__.py:201: "Please install it with `pip install diffusers`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:348: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\exporters\onnx\__main__.py:206: "The library `timm` was specified, but it is not installed. Please install it with `pip install timm`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:349: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\exporters\onnx\__main__.py:230: "Please install it with `pip install timm`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:350: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\exporters\onnx\__main__.py:235: "Please install it with `pip install diffusers`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:351: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\exporters\onnx\base.py:210: "You can install them by doing: pip install onnx onnxruntime"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:352: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\exporters\utils.py:43: "Please update diffusers by running `pip install --upgrade diffusers`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:353: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\gptq\quantizer.py:411: "gptqmodel or auto-gptq is required in order to perform gptq quantization: `pip install gptqmodel` or `pip install auto-gptq`. Please notice that auto-gptq will be deprecated in the future."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:354: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\gptq\quantizer.py:430: "Asymmetric sym=False quantization is not supported with auto-gptq. Please use gptqmodel: `pip install gptqmodel`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:355: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\gptq\quantizer.py:435: "gptq_v2 format only supported with gptqmodel. Please install gptqmodel: `pip install gptqmodel`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:356: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\gptq\quantizer.py:879: "gptqmodel (`pip install gptqmodel`) or auto-gptq (`pip install auto-gptq`) is required in order to load quantized weights. Please notice that auto-gptq will be deprecated in the future."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:357: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\gptq\quantizer.py:884: "a quantized model. You can do it with `pip install accelerate`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:358: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\optimum\utils\import_utils.py:290: `pip install datasets`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:359: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\overrides\typing_utils.py:11: pip install typing_utils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:360: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\__main__.py:7: # when invoked as python -m pip <command>
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:361: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\__main__.py:12: # This allows the usage python pip-*.whl/pip install pip-*.whl
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:362: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\commands\search.py:126: " with `pip install --pre`)",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:363: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\commands\uninstall.py:31: - Pure distutils packages installed with ``python setup.py install``, which
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:364: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\exceptions.py:753: (f"pip install --force-reinstall --no-deps {dep}", "green"),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:365: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\exceptions.py:771: class LegacyDistutilsInstall(DiagnosticPipError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:366: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\exceptions.py:772: reference = "uninstall-distutils-installed-package"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:367: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\exceptions.py:778: "It is a distutils installed project and thus we cannot accurately "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:368: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\index\collector.py:138: # twine upload && pip install will function, but if
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:369: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\index\collector.py:139: # they've done a pip install in the last ~10 minutes
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:370: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:65: # Import distutils lazily to avoid deprecation warnings,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:371: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:68: from . import _distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:372: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:71: # sysconfig, but is explicitly opting out and using distutils instead.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:373: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:83: from distutils.command.install import INSTALL_SCHEMES
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:374: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:108: from distutils.command.install import INSTALL_SCHEMES
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:375: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:120: from distutils.command.install import INSTALL_SCHEMES
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:376: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:134: from distutils.command.install import install
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:377: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:135: from distutils.dist import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:378: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:147: """Slackware patches sysconfig but fails to patch distutils and site.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:379: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:163: """MSYS2 patches distutils and sysconfig to use a UNIX-like scheme.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:380: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:184: "\ndistutils: %s"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:381: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:235: old = _distutils.get_scheme(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:382: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:252: # distutils incorrectly put PyPy packages under ``site-packages/python``
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:383: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:268: # the ``include`` value, but distutils's ``headers`` does. We'll let
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:384: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:280: # On Red Hat and derived Linux distributions, distutils is patched to
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:385: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:286: # sys.platlibdir, but distutils's unix_user incorrectly continues
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:386: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:334: # triggers special logic in sysconfig that's not present in distutils.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:387: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:349: # Check if this path mismatch is caused by distutils config files. Those
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:388: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:352: default_old = _distutils.distutils_scheme(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:389: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:364: "Configuring installation scheme with distutils config files "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:390: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:387: old = _distutils.get_bin_prefix()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:391: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:400: Debian's ``distutils.sysconfig.get_python_lib()`` implementation returns the
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:392: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:420: old = _distutils.get_purelib()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:393: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:434: from . import _distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:394: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\__init__.py:436: old = _distutils.get_platlib()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:395: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:6: # If pip's going to use distutils, it should not be using the copy that setuptools
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:396: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:15: __import__("_distutils_hack").remove_shim()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:397: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:22: from distutils.cmd import Command as DistutilsCommand
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:398: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:23: from distutils.command.install import SCHEME_KEYS
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:399: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:24: from distutils.command.install import install as distutils_install_command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:400: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:25: from distutils.sysconfig import get_python_lib
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:401: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:36: def distutils_scheme(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:402: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:47: Return a distutils install scheme
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:403: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:49: from distutils.dist import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:404: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:62: "Ignore distutils configs in %s due to encoding errors.",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:405: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:65: obj: DistutilsCommand | None = None
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:406: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:68: i: distutils_install_command = obj
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:407: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:125: Get the "scheme" corresponding to the input parameters. The distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:408: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:136: ~/.pydistutils.cfg (posix) or ~/pydistutils.cfg (non-posix) for
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:409: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_distutils.py:141: scheme = distutils_scheme(dist_name, user, home, root, isolated, prefix)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:410: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_sysconfig.py:39: This does not account for ``pip install --prefix`` (also means we're not
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:411: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_sysconfig.py:141: :param isolated: ignored, but kept for distutils compatibility (where
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:412: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_sysconfig.py:142: this controls whether the user-site pydistutils.cfg is honored)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:413: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\_sysconfig.py:175: # 2. If the distribution name is not known, distutils uses 'UNKNOWN'. We
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:414: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\locations\base.py:35: This is borrowed from Python's standard library's distutils module.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:415: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\base.py:207: def installed_by_distutils(self) -> bool:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:416: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\base.py:208: """Whether this distribution is installed with legacy distutils format.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:417: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\base.py:210: A distribution installed with "raw" distutils not patched by setuptools
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:418: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\base.py:240: Note that this ensure the metadata store is a directory. distutils can
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:419: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\base.py:242: property is *False* for that case. Also see ``installed_by_distutils``.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:420: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\base.py:359: def iter_distutils_script_names(self) -> Iterator[str]:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:421: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\base.py:360: """Find distutils 'scripts' entries metadata.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:422: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\base.py:362: If 'scripts' is supplied in ``setup.py``, distutils records those in the
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:423: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\importlib\_dists.py:179: def iter_distutils_script_names(self) -> Iterator[str]:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:424: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\importlib\_dists.py:180: # A distutils installation is always "flat" (not in e.g. egg form), so
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:425: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\importlib\_dists.py:182: # zipfile.Path), it can never contain any distutils scripts.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:426: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\pkg_resources.py:174: def installed_by_distutils(self) -> bool:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:427: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\pkg_resources.py:175: # A distutils-installed distribution is provided by FileMetadata. This
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:428: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\metadata\pkg_resources.py:198: def iter_distutils_script_names(self) -> Iterator[str]:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:429: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\operations\install\wheel.py:441: :param scheme: Distutils scheme dictating the install directories
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:430: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\req\req_uninstall.py:11: from pip._internal.exceptions import LegacyDistutilsInstall, UninstallMissingRecord
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:431: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\req\req_uninstall.py:504: elif dist.installed_by_distutils:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:432: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\req\req_uninstall.py:505: raise LegacyDistutilsInstall(distribution=dist)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:433: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\req\req_uninstall.py:558: # find distutils scripts= scripts
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:434: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\req\req_uninstall.py:560: for script in dist.iter_distutils_script_names():
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:435: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\utils\misc.py:567: python -m pip ...
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:436: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_internal\utils\setuptools_build.py:16: #   import from `distutils.core` to work with newer packaging standards.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:437: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\cachecontrol\caches\file_cache.py:43: pip install cachecontrol[filecache]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:438: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:1785: # Get the distutils command for interacting with PyPI configurations.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:439: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:1788: # from distutils.core import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:440: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:1789: # from distutils.config import PyPIRCCommand
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:441: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:1814: if 'distutils' in sections:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:442: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:1816: index_servers = config.get('distutils', 'index-servers')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:443: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:1873: Read the PyPI access configuration as supported by distutils.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:444: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:1963: from distutils import sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:445: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\pkg_resources\__init__.py:202: distutils.util.get_platform() normally reports the minimum version
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:446: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\pkg_resources\__init__.py:204: distutils.  But what we want when checking compatibility is to know the
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:447: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\pkg_resources\__init__.py:454: XXX Currently this is the same as ``distutils.util.get_platform()``, but it
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:448: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\pkg_resources\__init__.py:3329: Packages installed by distutils (e.g. numpy or scipy),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:449: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pip\_vendor\urllib3\contrib\pyopenssl.py:20: $ python -m pip install pyopenssl cryptography idna
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:450: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pkg_resources\__init__.py:192: distutils.util.get_platform() normally reports the minimum version
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:451: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pkg_resources\__init__.py:194: distutils.  But what we want when checking compatibility is to know the
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:452: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pkg_resources\__init__.py:3355: Packages installed by distutils (e.g. numpy or scipy),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:453: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pkg_resources\tests\test_pkg_resources.py:20: import distutils.command.install_egg_info
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:454: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pkg_resources\tests\test_pkg_resources.py:21: import distutils.dist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:455: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pkg_resources\tests\test_pkg_resources.py:337: class TestDeepVersionLookupDistutils:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:456: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pkg_resources\tests\test_pkg_resources.py:357: Create a foo package installed (distutils-style) to env.paths['lib']
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:457: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pkg_resources\tests\test_pkg_resources.py:362: dist = distutils.dist.Distribution(attrs)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:458: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pkg_resources\tests\test_pkg_resources.py:363: iei_cmd = distutils.command.install_egg_info.install_egg_info(dist)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:459: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\posthog\ai\anthropic\anthropic.py:6: "Please install the Anthropic SDK to use this feature: 'pip install anthropic'"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:460: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\posthog\ai\anthropic\anthropic_async.py:6: "Please install the Anthropic SDK to use this feature: 'pip install anthropic'"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:461: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\posthog\ai\anthropic\anthropic_providers.py:5: "Please install the Anthropic SDK to use this feature: 'pip install anthropic'"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:462: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\posthog\ai\gemini\gemini.py:10: "Please install the Google Gemini SDK to use this feature: 'pip install google-genai'"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:463: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\posthog\ai\langchain\callbacks.py:5: "Please install LangChain to use this feature: 'pip install langchain'"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:464: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\posthog\ai\openai\openai.py:9: "Please install the OpenAI SDK to use this feature: 'pip install openai'"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:465: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\posthog\ai\openai\openai_async.py:9: "Please install the OpenAI SDK to use this feature: 'pip install openai'"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:466: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\posthog\ai\openai\openai_providers.py:5: "Please install the Open AI SDK to use this feature: 'pip install openai'"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:467: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pydantic\config.py:1036: Python 3.10 and older don't support exception groups natively. <=3.10, backport must be installed: `pip install exceptiongroup`.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:468: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pydantic\networks.py:951: raise ImportError("email-validator is not installed, run `pip install 'pydantic[email]'`") from e
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:469: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pydantic\networks.py:953: raise ImportError('email-validator version >= 2.0 required, run pip install -U email-validator')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:470: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pydantic\networks.py:967: pip install email-validator
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:471: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pydantic\networks.py:1012: pip install email-validator
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:472: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pydantic\v1\env_settings.py:332: raise ImportError('python-dotenv is not installed, run `pip install pydantic[dotenv]`') from e
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:473: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\pydantic\v1\networks.py:580: raise ImportError('email-validator is not installed, run `pip install pydantic[email]`') from e
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:474: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\scipy\_lib\_pep440.py:3: The LooseVersion and StrictVersion classes that distutils provides don't
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:475: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\scipy\signal\_waveforms.py:660: >>> imp = signal.unit_impulse(100, 'mid')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:476: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\scipy\signal\tests\test_dltisys.py:265: imp = (np.array([lambda1, lambda2]) **
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:477: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\scipy\signal\tests\test_waveforms.py:360: imp = waveforms.unit_impulse((4, 4), 2)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:478: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\scipy\signal\tests\test_waveforms.py:373: imp = waveforms.unit_impulse(7)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:479: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\scipy\signal\tests\test_waveforms.py:376: imp = waveforms.unit_impulse(5, 3, dtype=int)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:480: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\scipy\signal\tests\test_waveforms.py:379: imp = waveforms.unit_impulse((5, 2), (3, 1), dtype=complex)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:481: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\backend\load.py:50: "You can install them with pip: `pip install optimum[onnxruntime]` "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:482: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\backend\load.py:51: "or `pip install optimum[onnxruntime-gpu]`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:483: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\backend\load.py:125: "You can install them with pip: `pip install optimum[openvino]`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:484: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\backend\optimize.py:70: "You can install them with pip: `pip install optimum[onnxruntime]` "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:485: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\backend\optimize.py:71: "or `pip install optimum[onnxruntime-gpu]`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:486: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\backend\quantize.py:70: "You can install them with pip: `pip install optimum[onnxruntime]` "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:487: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\backend\quantize.py:71: "or `pip install optimum[onnxruntime-gpu]`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:488: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\backend\quantize.py:183: "You can install them with pip: `pip install datasets optimum[openvino]`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:489: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\backend\quantize.py:187: "Please install datasets to use this function. You can install it with pip: `pip install datasets`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:490: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\cross_encoder\evaluation\nano_beir.py:297: "datasets is not available. Please install it to use the CrossEncoderNanoBEIREvaluator via `pip install datasets`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:491: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\cross_encoder\fit_mixin.py:251: raise ImportError("Please install `datasets` to use this function: `pip install datasets`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:492: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\cross_encoder\model_card_template.md:68: pip install -U sentence-transformers
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:493: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\cross_encoder\trainer.py:125: 'pip install -U "sentence-transformers[train]"'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:494: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\evaluation\NanoBEIREvaluator.py:408: "datasets is not available. Please install it to use the NanoBEIREvaluator via `pip install datasets`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:495: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\fit_mixin.py:246: raise ImportError("Please install `datasets` to use this function: `pip install datasets`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:496: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\losses\SoftmaxLoss.py:113: "Consider updating transformers with `pip install transformers>=4.43.0`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:497: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\model_card_template.md:74: pip install -U sentence-transformers
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:498: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\model_card_templates.py:44: pip install -U sentence-transformers
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:499: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\models\StaticEmbedding.py:206: "To use this method, please install the `model2vec` package: `pip install model2vec[distill]`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:500: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\models\StaticEmbedding.py:259: raise ImportError("To use this method, please install the `model2vec` package: `pip install model2vec`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:501: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\models\Transformer.py:149: "Loading a PEFT model requires installing the `peft` package. You can install it via `pip install peft`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:502: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\sparse_encoder\model_card_template.md:74: pip install -U sentence-transformers
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:503: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\sparse_encoder\models\MLMTransformer.py:136: "Loading a PEFT model requires installing the `peft` package. You can install it via `pip install peft`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:504: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\sparse_encoder\search_engines.py:65: raise ImportError("Please install the Qdrant client with `pip install qdrant-client` to use this function.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:505: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\sparse_encoder\search_engines.py:200: "Please install the Elasticsearch client with `pip install elasticsearch` to use this function."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:506: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\sparse_encoder\search_engines.py:344: raise ImportError("Please install Seismic with `pip install pyseismic-lsr` to use this function.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:507: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\sparse_encoder\search_engines.py:469: "Please install the OpenSearch client with `pip install opensearch-py` to use this function."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:508: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\sparse_encoder\trainer.py:129: 'pip install -U "sentence-transformers[train]"'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:509: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\trainer.py:153: 'pip install -U "sentence-transformers[train]"'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:510: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sentence_transformers\util\hard_negatives.py:234: raise ImportError("Please install `datasets` to use this function: `pip install datasets`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:511: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:1: """Extensions to the 'distutils' for large or complex distributions"""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:512: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:3: # Command.reinitialize_command has an extra **kw param that distutils doesn't have
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:513: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:4: # Can't disable on the exact line because distutils doesn't exists on Python 3.12
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:514: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:5: # and mypy isn't aware of distutils_hack, causing distutils.core.Command to be Any,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:515: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:21: import _distutils_hack.override  # noqa: F401
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:516: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:31: import distutils.core
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:517: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:54: # our PEP 517 backend patch `distutils.core.Distribution`.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:518: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:55: class MinimalDistribution(distutils.core.Distribution):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:519: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:97: You can try `pip install --use-pep517` as a workaround for this problem,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:520: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:115: return distutils.core.setup(**attrs)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:521: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:118: setup.__doc__ = distutils.core.setup.__doc__
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:522: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:122: from distutils.core import Command as _Command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:523: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:124: _Command = monkey.get_unpatched(distutils.core.Command)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:524: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:166: distribution: Distribution  # override distutils.dist.Distribution with setuptools.dist.Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:525: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\__init__.py:189: return cmd  # pyright: ignore[reportReturnType] # pypa/distutils#307
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:526: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_core_metadata.py:25: from distutils.util import rfc822_escape
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:527: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_core_metadata.py:273: # from pypa/distutils#244; needed only until that logic is always available
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:528: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\__init__.py:9: # behavior. Ref pypa/distutils#2 and pypa/distutils#16.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:529: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\__init__.py:12: importlib.import_module('_distutils_system_mod')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:530: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\_modified.py:13: from .errors import DistutilsFileError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:531: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\_modified.py:39: Raises DistutilsFileError if 'source' does not exist.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:532: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\_modified.py:42: raise DistutilsFileError(f"file {os.path.abspath(source)!r} does not exist")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:533: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\_msvccompiler.py:13: "_get_vc_env is private; find an alternative (pypa/distutils#340)"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:534: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\archive_util.py:1: """distutils.archive_util
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:535: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\archive_util.py:19: from .errors import DistutilsExecError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:536: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\archive_util.py:139: available, raises DistutilsExecError.  Returns the name of the output zip
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:537: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\archive_util.py:155: except DistutilsExecError:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:538: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\archive_util.py:158: raise DistutilsExecError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:539: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:1: """distutils.cmd
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:540: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:4: in the distutils.command package.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:541: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:19: from .errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:542: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:23: from distutils.dist import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:543: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:36: of the Distutils.  A useful analogy for command classes is to think of
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:544: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:82: from distutils.dist import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:545: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:93: # customize Distutils' behaviour command-by-command and let some
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:546: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:183: from distutils.fancy_getopt import longopt_xlate
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:547: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:216: DISTUTILS_DEBUG environment variable) flag is true.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:548: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:218: from distutils.debug import DEBUG
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:549: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:231: # option into conformance, raise DistutilsOptionError.  Thus, command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:550: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:243: raise DistutilsOptionError(f"'{option}' must be a {what} (got `{val}`)")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:551: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:269: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:552: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:276: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:553: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:325: # NOTE: Because distutils is private to Setuptools and not all commands are exposed here,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:554: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:474: from distutils.spawn import spawn
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:555: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\__init__.py:1: """distutils.command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:556: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\__init__.py:3: Package containing implementation of all the standard Distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:557: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist.py:1: """distutils.command.bdist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:558: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist.py:3: Implements the Distutils 'bdist' command (create a built [binary]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:559: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist.py:14: from ..errors import DistutilsOptionError, DistutilsPlatformError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:560: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist.py:134: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:561: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist.py:149: raise DistutilsOptionError(f"invalid format '{format}'")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:562: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_dumb.py:1: """distutils.command.bdist_dumb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:563: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_dumb.py:3: Implements the Distutils 'bdist_dumb' command (create a "dumb" built
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:564: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_dumb.py:8: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:565: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_dumb.py:13: from ..errors import DistutilsPlatformError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:566: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_dumb.py:82: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:567: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_dumb.py:117: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:568: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:1: """distutils.command.bdist_rpm
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:569: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:3: Implements the Distutils 'bdist_rpm' command (create RPM source and binary
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:570: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:9: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:571: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:15: DistutilsExecError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:572: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:16: DistutilsFileError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:573: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:17: DistutilsOptionError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:574: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:18: DistutilsPlatformError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:575: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:203: raise DistutilsOptionError("you must specify --rpm-base in RPM 2 mode")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:576: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:212: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:577: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:217: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:578: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:221: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:579: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:326: raise DistutilsFileError(f"icon file '{self.icon}' does not exist")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:580: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\bdist_rpm.py:374: raise DistutilsExecError(f"Failed to execute: {q_cmd!r}")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:581: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build.py:1: """distutils.command.build
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:582: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build.py:3: Implements the Distutils 'build' command."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:583: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build.py:15: from ..errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:584: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build.py:75: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:585: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build.py:126: raise DistutilsOptionError("parallel should be an integer")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:586: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:1: """distutils.command.build_clib
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:587: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:3: Implements the Distutils 'build_clib' command, to build a C/C++ library
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:588: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:19: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:589: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:24: from ..errors import DistutilsSetupError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:590: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:115: Raise DistutilsSetupError if the structure is invalid anywhere;
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:591: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:119: raise DistutilsSetupError("'libraries' option must be a list of tuples")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:592: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:123: raise DistutilsSetupError("each element of 'libraries' must a 2-tuple")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:593: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:128: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:594: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:134: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:595: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:139: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:596: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:161: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:597: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_clib.py:174: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:598: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:1: """distutils.command.build_ext
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:599: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:3: Implements the Distutils 'build_ext' command, for building extension
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:600: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:14: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:601: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:24: DistutilsError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:602: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:25: DistutilsOptionError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:603: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:26: DistutilsPlatformError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:604: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:27: DistutilsSetupError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:605: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:162: from distutils import sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:606: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:233: # this allows distutils on windows to work in the source tree
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:607: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:298: raise DistutilsOptionError("parallel should be an integer")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:608: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:303: # distutils.extension) for details.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:609: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:305: # For backwards compatibility with Distutils 0.8.2 and earlier, we
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:610: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:377: Raise DistutilsSetupError if the structure is invalid anywhere;
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:611: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:381: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:612: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:391: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:613: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:406: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:614: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:412: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:615: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:448: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:616: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:516: except (CCompilerError, DistutilsError, CompileError) as e:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:617: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:524: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:618: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:676: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:619: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_py.py:1: """distutils.command.build_py
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:620: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_py.py:3: Implements the Distutils 'build_py' command."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:621: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_py.py:9: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:622: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_py.py:13: from ..errors import DistutilsFileError, DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:623: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_py.py:69: raise DistutilsOptionError("optimize must be 0, 1, or 2")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:624: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_py.py:194: raise DistutilsFileError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:625: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_py.py:198: raise DistutilsFileError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:626: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_scripts.py:1: """distutils.command.build_scripts
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:627: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_scripts.py:3: Implements the Distutils 'build_scripts' command."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:628: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\build_scripts.py:8: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:629: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\check.py:1: """distutils.command.check
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:630: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\check.py:3: Implements the Distutils 'check' command.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:631: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\check.py:10: from ..errors import DistutilsSetupError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:632: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\check.py:82: raise DistutilsSetupError(str(exc))
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:633: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\check.py:84: raise DistutilsSetupError('The docutils package is needed.')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:634: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\check.py:89: raise DistutilsSetupError('Please correct your package.')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:635: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\clean.py:1: """distutils.command.clean
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:636: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\clean.py:3: Implements the Distutils 'clean' command."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:637: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\clean.py:8: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:638: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\config.py:1: """distutils.command.config
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:639: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\config.py:3: Implements the Distutils 'config' command, a (mostly) empty command class
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:640: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\config.py:18: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:641: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\config.py:22: from ..errors import DistutilsExecError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:642: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\config.py:266: except (CompileError, LinkError, DistutilsExecError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:643: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:1: """distutils.command.install
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:644: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:3: Implements the Distutils 'install' command."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:645: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:13: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:646: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:19: from ..errors import DistutilsOptionError, DistutilsPlatformError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:647: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:160: from it. pypa/distutils#88
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:648: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:343: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:649: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:348: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:650: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:359: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:651: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:541: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:652: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:549: raise DistutilsPlatformError("User base directory is not specified")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:653: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:558: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:654: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:580: raise DistutilsPlatformError("User base directory is not specified")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:655: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:594: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:656: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:650: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:657: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install.py:696: raise DistutilsPlatformError("Can't install when cross-compiling")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:658: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_data.py:1: """distutils.command.install_data
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:659: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_data.py:3: Implements the Distutils 'install_data' command, for installing
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:660: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_egg_info.py:2: distutils.command.install_egg_info
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:661: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_egg_info.py:4: Implements the Distutils 'install_egg_info' command, for installing
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:662: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_egg_info.py:33: Ref pypa/distutils#2.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:663: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_headers.py:1: """distutils.command.install_headers
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:664: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_headers.py:3: Implements the Distutils 'install_headers' command, to install C/C++ header
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:665: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_lib.py:1: """distutils.command.install_lib
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:666: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_lib.py:3: Implements the Distutils 'install_lib' command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:667: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_lib.py:14: from ..errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:668: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_lib.py:90: raise DistutilsOptionError("optimize must be 0, 1, or 2")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:669: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_scripts.py:1: """distutils.command.install_scripts
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:670: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_scripts.py:3: Implements the Distutils 'install_scripts' command, for installing
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:671: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\install_scripts.py:9: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:672: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\sdist.py:1: """distutils.command.sdist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:673: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\sdist.py:3: Implements the Distutils 'sdist' command (create a source distribution)."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:674: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\sdist.py:10: from distutils import archive_util, dir_util, file_util
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:675: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\sdist.py:11: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:676: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\sdist.py:17: from ..errors import DistutilsOptionError, DistutilsTemplateError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:677: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\sdist.py:159: raise DistutilsOptionError(f"unknown archive format '{bad_format}'")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:678: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\sdist.py:367: # the call above can raise a DistutilsTemplateError for
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:679: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\sdist.py:370: except (DistutilsTemplateError, ValueError) as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:680: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\sdist.py:412: content.insert(0, '# file GENERATED by distutils, do NOT edit')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:681: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\command\sdist.py:426: return first_line != '# file GENERATED by distutils, do NOT edit\n'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:682: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compat\__init__.py:13: Retain until at least 2025-04-31. See pypa/distutils#246
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:683: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compat\py39.py:9: Ensure vars contains 'EXT_SUFFIX'. pypa/distutils#130
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:684: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:1: """distutils.ccompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:685: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:4: for the Distutils compiler abstraction model."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:686: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:29: DistutilsModuleError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:687: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:30: DistutilsPlatformError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:688: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:186: 'distutils.util.split_quoted()'.)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:689: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:1138: from distutils.debug import DEBUG
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:690: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:1225: # is assumed to be in the 'distutils' package.)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:691: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:1251: from distutils.fancy_getopt import FancyGetopt
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:692: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:1290: raise DistutilsPlatformError(msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:693: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:1293: module_name = "distutils." + module_name
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:694: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:1298: raise DistutilsModuleError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:695: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:1302: raise DistutilsModuleError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:696: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\cygwin.py:1: """distutils.cygwinccompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:697: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\cygwin.py:18: DistutilsExecError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:698: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\cygwin.py:19: DistutilsPlatformError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:699: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\cygwin.py:112: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:700: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\cygwin.py:127: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:701: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\cygwin.py:269: raise DistutilsPlatformError(_runtime_library_dirs_msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:702: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\cygwin.py:302: from distutils import sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:703: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:1: """distutils._msvccompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:704: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:30: DistutilsExecError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:705: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:31: DistutilsPlatformError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:706: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:150: if os.getenv("DISTUTILS_USE_SDK"):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:707: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:155: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:708: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:168: raise DistutilsPlatformError(f"Error executing {exc.cmd}")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:709: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:288: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:710: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:296: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:711: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:421: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:712: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:446: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:713: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:461: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:714: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:486: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:715: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:555: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:716: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:569: Discovered in pypa/distutils#15, some tools monkeypatch the compiler,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:717: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:581: warnings.warn("Fallback spawn triggered. Please update distutils monkeypatch.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:718: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:593: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:719: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_cygwin.py:1: """Tests for distutils.cygwinccompiler."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:720: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_cygwin.py:5: from distutils import sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:721: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_cygwin.py:6: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:722: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_cygwin.py:14: def stuff(request, monkeypatch, distutils_managed_tempdir):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:723: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_cygwin.py:28: from distutils.cygwinccompiler import CygwinCCompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:724: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_cygwin.py:39: from distutils.cygwinccompiler import CygwinCCompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:725: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_cygwin.py:73: from distutils.cygwinccompiler import CygwinCCompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:726: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_mingw.py:1: from distutils import sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:727: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_mingw.py:2: from distutils.errors import DistutilsPlatformError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:728: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_mingw.py:3: from distutils.util import is_mingw, split_quoted
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:729: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_mingw.py:32: with pytest.raises(DistutilsPlatformError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:730: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_msvc.py:6: from distutils.errors import DistutilsPlatformError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:731: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_msvc.py:7: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:732: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_msvc.py:8: from distutils.util import get_platform
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:733: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_msvc.py:20: # a DistutilsPlatformError if the compiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:734: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_msvc.py:27: with pytest.raises(DistutilsPlatformError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:735: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_msvc.py:62: old_distutils_use_sdk = os.environ.pop('DISTUTILS_USE_SDK', None)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:736: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_msvc.py:70: if old_distutils_use_sdk:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:737: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_msvc.py:71: os.environ['DISTUTILS_USE_SDK'] = old_distutils_use_sdk
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:738: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_msvc.py:124: from distutils import ccompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:739: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:1: """Tests for distutils.unixccompiler."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:740: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:6: from distutils import sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:741: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:7: from distutils.compat import consolidate_linker_args
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:742: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:8: from distutils.errors import DistutilsPlatformError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:743: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:9: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:744: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:10: from distutils.tests.compat.py39 import EnvironmentVarGuard
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:745: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:11: from distutils.util import _clear_cached_macosx_ver
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:746: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:95: DistutilsPlatformError, match=darwin_ver_var + r' mismatch'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:747: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:317: pypa/distutils#126
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:748: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:378: # Issue https://github.com/pypa/distutils/issues/64:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:749: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\unix.py:1: """distutils.unixccompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:750: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\unix.py:30: from ...errors import DistutilsExecError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:751: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\unix.py:209: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:752: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\unix.py:222: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:753: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\unix.py:244: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:754: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\unix.py:308: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:755: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\unix.py:325: def runtime_library_dir_option(self, dir: str) -> str | list[str]:  # type: ignore[override] # Fixed in pypa/distutils#339
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:756: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\unix.py:339: from distutils.util import get_macosx_target_ver, split_version
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:757: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\zos.py:1: """distutils.zosccompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:758: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\zos.py:17: from ...errors import DistutilsExecError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:759: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\zos.py:160: except DistutilsExecError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:760: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:1: """distutils.core
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:761: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:3: The only module that needs to be imported to use the Distutils; provides
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:762: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:6: really defined in distutils.dist and distutils.cmd.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:763: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:19: # Mainly import these so setup scripts can "from distutils.core import" them.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:764: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:23: DistutilsArgError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:765: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:24: DistutilsError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:766: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:25: DistutilsSetupError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:767: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:98: """The gateway to the Distutils: do everything your setup script needs
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:768: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:101: line; run each Distutils command found there, customized by the options
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:769: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:116: 'distutils.command.foo_bar'.  The command class must provide a
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:770: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:118: 'distutils.fancy_getopt'.  Any command-line options between the current
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:771: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:149: except DistutilsSetupError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:772: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:174: except DistutilsArgError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:773: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:212: except (DistutilsError, CCompilerError) as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:774: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:250: used to drive the Distutils.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:775: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:279: "'distutils.core.setup()' was never called -- "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:776: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\core.py:280: f"perhaps '{script_name}' is not a Distutils setup script?"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:777: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\debug.py:3: # If DISTUTILS_DEBUG is anything other than the empty string, we run in
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:778: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\debug.py:5: DEBUG = os.environ.get('DISTUTILS_DEBUG')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:779: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py:1: """distutils.dir_util
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:780: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py:12: from .errors import DistutilsFileError, DistutilsInternalError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:781: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py:53: Raise DistutilsFileError if unable to create some directory along the way
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:782: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py:63: raise DistutilsFileError(f"could not create '{name}': {exc.args[-1]}")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:783: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py:76: raise DistutilsInternalError(f"mkpath: 'name' must be a string (got {name!r})")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:784: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py:110: directory, raise DistutilsFileError.  If 'dst' does not exist, it is
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:785: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py:127: raise DistutilsFileError(f"cannot copy tree '{src}': not a directory")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:786: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py:134: raise DistutilsFileError(f"error listing files in '{src}': {e.strerror}")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:787: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:1: """distutils.dist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:788: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:34: DistutilsArgError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:789: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:35: DistutilsClassError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:790: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:36: DistutilsModuleError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:791: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:37: DistutilsOptionError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:792: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:55: # Regex to define acceptable Distutils command names.  This is not *quite*
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:793: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:78: """The core of the Distutils.  Most of the work hiding behind 'setup'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:794: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:80: to the Distutils commands specified on the command line.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:795: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:104: ('no-user-cfg', None, 'ignore pydistutils.cfg in your home directory'),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:796: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:355: - distutils.cfg in the Distutils installation directory (i.e.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:797: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:356: where the top-level Distutils __inst__.py file lives)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:798: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:357: - a file in the user's home directory named .pydistutils.cfg
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:799: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:358: on Unix and pydistutils.cfg on Windows/Mac; may be disabled
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:800: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:372: # The system-wide Distutils config file
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:801: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:373: sys_dir = pathlib.Path(sys.modules['distutils'].__file__).parent
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:802: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:374: yield sys_dir / "distutils.cfg"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:803: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:378: filename = prefix + 'pydistutils.cfg'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:804: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:454: raise DistutilsOptionError(msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:805: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:463: instance.  Then, it is alternately scanned for Distutils commands
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:806: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:469: attribute raises DistutilsGetoptError; any error on the
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:807: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:470: command-line raises DistutilsArgError.  If no Distutils commands
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:808: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:471: were found on the command line, raises DistutilsArgError.  Return
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:809: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:520: raise DistutilsArgError("no commands supplied")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:810: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:535: "list of packages that provide distutils commands",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:811: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:549: from distutils.cmd import Command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:812: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:562: except DistutilsModuleError as msg:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:813: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:563: raise DistutilsArgError(msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:814: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:568: raise DistutilsClassError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:815: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:582: raise DistutilsClassError(msg % cmd_class)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:816: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:621: raise DistutilsClassError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:817: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:666: from distutils.cmd import Command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:818: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:667: from distutils.core import gen_usage
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:819: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:707: from distutils.core import gen_usage
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:820: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:760: (listed in distutils.command.__all__) and "extra commands"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:821: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:765: import distutils.command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:822: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:767: std_commands = distutils.command.__all__
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:823: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:785: distutils.command.__all__) and "extra commands" (mentioned in
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:824: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:790: # Distutils interface (by Jack Jansen)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:825: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:791: import distutils.command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:826: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:793: std_commands = distutils.command.__all__
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:827: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:819: if "distutils.command" not in pkgs:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:828: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:820: pkgs.insert(0, "distutils.command")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:829: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:825: """Return the class that implements the Distutils command named by
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:830: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:829: ("distutils.command." + command) and fetch the command class from
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:831: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:833: Raises DistutilsModuleError if the expected module could not be
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:832: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:853: raise DistutilsModuleError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:833: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:860: raise DistutilsModuleError(f"invalid command '{command}'")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:834: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:935: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:835: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:939: raise DistutilsOptionError(msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:836: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:970: from distutils.cmd import Command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:837: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:1354: import distutils.versionpredicate
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:838: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:1357: distutils.versionpredicate.VersionPredicate(v)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:839: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:1366: import distutils.versionpredicate
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:840: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:1368: distutils.versionpredicate.split_provision(v)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:841: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:1375: import distutils.versionpredicate
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:842: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\dist.py:1378: distutils.versionpredicate.VersionPredicate(v)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:843: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:2: Exceptions used by the Distutils modules.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:844: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:4: Distutils modules may raise these or standard exceptions,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:845: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:20: class DistutilsError(Exception):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:846: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:21: """The root of all Distutils evil."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:847: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:26: class DistutilsModuleError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:848: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:33: class DistutilsClassError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:849: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:42: class DistutilsGetoptError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:850: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:48: class DistutilsArgError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:851: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:55: class DistutilsFileError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:852: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:63: class DistutilsOptionError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:853: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:69: the setup script, we'll raise DistutilsSetupError instead."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:854: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:74: class DistutilsSetupError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:855: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:81: class DistutilsPlatformError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:856: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:89: class DistutilsExecError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:857: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:96: class DistutilsInternalError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:858: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:103: class DistutilsTemplateError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:859: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\errors.py:107: class DistutilsByteCompileError(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:860: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\extension.py:1: """distutils.extension
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:861: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\extension.py:13: # make sense to put it in distutils.command.build_ext.  However, that
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:862: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\extension.py:19: # import that large-ish module (indirectly, through distutils.core) in
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:863: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\extension.py:158: from distutils.sysconfig import _variable_rx, expand_makefile_vars, parse_makefile
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:864: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\extension.py:159: from distutils.text_file import TextFile
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:865: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\extension.py:160: from distutils.util import split_quoted
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:866: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:1: """distutils.fancy_getopt
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:867: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:20: from .errors import DistutilsArgError, DistutilsGetoptError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:868: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:22: # Much like command_re in distutils.core, this is close to but not quite
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:869: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:100: raise DistutilsGetoptError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:870: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:123: raise DistutilsGetoptError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:871: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:127: raise DistutilsGetoptError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:872: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:167: raise DistutilsGetoptError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:873: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:172: raise DistutilsGetoptError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:874: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:190: raise DistutilsGetoptError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:875: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:203: raise DistutilsGetoptError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:876: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:214: raise DistutilsGetoptError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:877: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\fancy_getopt.py:249: raise DistutilsArgError(msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:878: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:1: """distutils.file_util
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:879: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:9: from .errors import DistutilsFileError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:880: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:18: DistutilsFileError.  Data is read/written in chunks of 'buffer_size'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:881: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:30: raise DistutilsFileError(f"could not open '{src}': {e.strerror}")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:882: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:36: raise DistutilsFileError(f"could not delete '{dst}': {e.strerror}")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:883: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:41: raise DistutilsFileError(f"could not create '{dst}': {e.strerror}")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:884: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:47: raise DistutilsFileError(f"could not read from '{src}': {e.strerror}")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:885: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:55: raise DistutilsFileError(f"could not write to '{dst}': {e.strerror}")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:886: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:104: from distutils._modified import newer
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:887: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:108: raise DistutilsFileError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:888: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:190: raise DistutilsFileError(f"can't move '{src}': not a regular file")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:889: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:195: raise DistutilsFileError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:890: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:200: raise DistutilsFileError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:891: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:212: raise DistutilsFileError(f"couldn't move '{src}' to '{dst}': {msg}")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:892: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\file_util.py:224: raise DistutilsFileError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:893: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\filelist.py:1: """distutils.filelist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:894: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\filelist.py:17: from .errors import DistutilsInternalError, DistutilsTemplateError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:895: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\filelist.py:50: DISTUTILS_DEBUG environment variable) flag is true.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:896: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\filelist.py:52: from distutils.debug import DEBUG
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:897: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\filelist.py:90: raise DistutilsTemplateError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:898: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\filelist.py:96: raise DistutilsTemplateError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:899: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\filelist.py:103: raise DistutilsTemplateError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:900: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\filelist.py:108: raise DistutilsTemplateError(f"unknown action '{action}'")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:901: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\filelist.py:195: raise DistutilsInternalError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:902: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\log.py:42: """distutils.log.Log is deprecated, please use an alternative from `logging`."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:903: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\spawn.py:1: """distutils.spawn
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:904: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\spawn.py:20: from .errors import DistutilsExecError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:905: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\spawn.py:74: Raise DistutilsExecError if running the program fails in any way; just
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:906: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\spawn.py:89: raise DistutilsExecError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:907: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\spawn.py:93: raise DistutilsExecError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:908: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\sysconfig.py:26: from .errors import DistutilsPlatformError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:909: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\sysconfig.py:143: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:910: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\sysconfig.py:222: # allow this behavior to be monkey-patched. Ref pypa/distutils#2.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:911: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\sysconfig.py:272: raise DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:912: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\sysconfig.py:416: from distutils.text_file import TextFile
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:913: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\__init__.py:2: Test suite for distutils.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:914: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\__init__.py:4: Tests for the command classes in the distutils.command package are
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:915: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\__init__.py:5: included in distutils.tests as well, instead of using a separate
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:916: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\__init__.py:6: distutils.command.tests package, since command identification is done
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:917: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\__init__.py:23: from distutils import ccompiler, errors, sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:918: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\__init__.py:31: except errors.DistutilsPlatformError:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:919: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\support.py:1: """Support code for distutils test cases."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:920: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\support.py:10: from distutils.core import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:921: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\support.py:16: @pytest.mark.usefixtures('distutils_managed_tempdir')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:922: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_archive_util.py:1: """Tests for distutils.archive_util."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:923: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_archive_util.py:9: from distutils import archive_util
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:924: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_archive_util.py:10: from distutils.archive_util import (
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:925: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_archive_util.py:17: from distutils.spawn import spawn
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:926: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_archive_util.py:18: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:927: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist.py:1: """Tests for distutils.command.bdist."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:928: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist.py:3: from distutils.command.bdist import bdist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:929: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist.py:4: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:930: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist_dumb.py:1: """Tests for distutils.command.bdist_dumb."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:931: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist_dumb.py:6: from distutils.command.bdist_dumb import bdist_dumb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:932: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist_dumb.py:7: from distutils.core import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:933: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist_dumb.py:8: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:934: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist_dumb.py:13: from distutils.core import setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:935: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist_rpm.py:1: """Tests for distutils.command.bdist_rpm."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:936: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist_rpm.py:6: from distutils.command.bdist_rpm import bdist_rpm
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:937: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist_rpm.py:7: from distutils.core import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:938: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist_rpm.py:8: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:939: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_bdist_rpm.py:14: from distutils.core import setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:940: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build.py:1: """Tests for distutils.command.build."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:941: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build.py:5: from distutils.command.build import build
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:942: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build.py:6: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:943: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:1: """Tests for distutils.command.build_clib."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:944: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:4: from distutils.command.build_clib import build_clib
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:945: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:5: from distutils.errors import DistutilsSetupError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:946: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:6: from distutils.tests import missing_compiler_executable, support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:947: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:17: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:948: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:21: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:949: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:26: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:950: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:30: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:951: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:36: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:952: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:52: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:953: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:56: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:954: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:85: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:955: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_clib.py:107: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:956: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:14: from distutils import sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:957: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:15: from distutils.command.build_ext import build_ext
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:958: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:16: from distutils.core import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:959: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:17: from distutils.errors import (
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:960: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:19: DistutilsPlatformError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:961: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:20: DistutilsSetupError,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:962: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:23: from distutils.extension import Extension
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:963: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:24: from distutils.tests import missing_compiler_executable
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:964: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:25: from distutils.tests.support import TempdirManager, copy_xxmodule_c, fixup_build_ext
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:965: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:41: from distutils.command import build_ext
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:966: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:191: from distutils.sysconfig import _config_vars
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:967: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:329: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:968: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:335: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:969: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:342: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:970: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:348: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:971: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:375: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:972: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:442: # issue #5977 : distutils build_ext.get_outputs
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:973: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:540: with pytest.raises(DistutilsPlatformError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:974: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_py.py:1: """Tests for distutils.command.build_py."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:975: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_py.py:5: from distutils.command.build_py import build_py
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:976: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_py.py:6: from distutils.core import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:977: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_py.py:7: from distutils.errors import DistutilsFileError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:978: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_py.py:8: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:979: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_py.py:78: except DistutilsFileError:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:980: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_py.py:144: except DistutilsFileError:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:981: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_py.py:165: Originally distutils implementation did not account for PEP 420
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:982: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_scripts.py:1: """Tests for distutils.command.build_scripts."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:983: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_scripts.py:5: from distutils import sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:984: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_scripts.py:6: from distutils.command.build_scripts import build_scripts
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:985: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_scripts.py:7: from distutils.core import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:986: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_scripts.py:8: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:987: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_check.py:1: """Tests for distutils.command.check."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:988: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_check.py:5: from distutils.command.check import check
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:989: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_check.py:6: from distutils.errors import DistutilsSetupError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:990: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_check.py:7: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:991: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_check.py:61: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:992: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_check.py:138: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:993: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_check.py:193: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:994: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_clean.py:1: """Tests for distutils.command.clean."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:995: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_clean.py:4: from distutils.command.clean import clean
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:996: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_clean.py:5: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:997: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_cmd.py:1: """Tests for distutils.cmd."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:998: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_cmd.py:4: from distutils import debug
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:999: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_cmd.py:5: from distutils.cmd import Command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1000: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_cmd.py:6: from distutils.dist import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1001: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_cmd.py:7: from distutils.errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1002: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_cmd.py:31: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1003: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_cmd.py:34: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1004: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_cmd.py:45: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1005: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_cmd.py:85: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1006: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_cmd.py:92: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1007: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_cmd.py:99: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1008: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_config_cmd.py:1: """Tests for distutils.command.config."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1009: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_config_cmd.py:5: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1010: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_config_cmd.py:6: from distutils.command.config import config, dump_file
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1011: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_config_cmd.py:7: from distutils.tests import missing_compiler_executable, support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1012: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:1: """Tests for distutils.core."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1013: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:3: import distutils.core
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1014: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:7: from distutils.dist import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1015: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:16: from distutils.core import setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1016: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:25: from distutils.core import setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1017: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:30: from distutils.core import setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1018: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:36: from distutils.core import setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1019: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:37: from distutils.command.install import install as _install
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1020: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:46: from distutils.core import setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1021: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:73: distutils.core.run_setup(temp_file)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1022: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:79: distutils.core.run_setup(temp_file)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1023: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:86: dist = distutils.core.run_setup(temp_file)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1024: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:101: distutils.core.run_setup(setup_py)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1025: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:110: dist = distutils.core.run_setup(temp_file, stop_after="config")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1026: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:117: dist = distutils.core.run_setup(temp_file, stop_after="commandline")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1027: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:119: distutils.core.run_commands(dist)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1028: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:125: distutils.core.setup(name='bar')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1029: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:127: monkeypatch.setattr(distutils.core, 'DEBUG', True)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1030: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_core.py:128: distutils.core.setup(name='bar')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1031: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dir_util.py:1: """Tests for distutils.dir_util."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1032: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dir_util.py:8: from distutils import dir_util, errors
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1033: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dir_util.py:9: from distutils.dir_util import (
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1034: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dir_util.py:16: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1035: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dir_util.py:24: def stuff(request, monkeypatch, distutils_managed_tempdir):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1036: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dir_util.py:108: An exception in listdir should raise a DistutilsFileError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1037: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dir_util.py:112: pytest.raises(errors.DistutilsFileError),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1038: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dir_util.py:121: pypa/distutils#304
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1039: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dir_util.py:133: with pytest.raises(errors.DistutilsFileError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1040: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:1: """Tests for distutils.dist."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1041: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:13: from distutils.cmd import Command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1042: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:14: from distutils.dist import Distribution, fix_help_options
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1043: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:15: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1044: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:21: pydistutils_cfg = '.' * (os.name == 'posix') + 'pydistutils.cfg'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1045: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:25: """Sample distutils extension command."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1046: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:66: assert d.get_command_packages() == ["distutils.command"]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1047: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:69: from distutils.tests.test_dist import test_dist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1048: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:73: "foo.bar,distutils.tests",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1049: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:80: "distutils.command",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1050: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:82: "distutils.tests",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1051: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:89: 'distutils' not in Distribution.parse_config_files.__module__,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1052: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:164: assert d.get_command_packages() == ["distutils.command", "foo.bar", "splat"]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1053: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:169: assert d.get_command_packages() == ["distutils.command", "spork"]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1054: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:175: assert d.get_command_packages() == ["distutils.command"]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1055: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:224: assert cmds == ['distutils.command']
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1056: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:225: assert dist.command_packages == ['distutils.command']
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1057: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:229: assert cmds == ['distutils.command', 'one', 'two']
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1058: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:239: jaraco.path.build({pydistutils_cfg: '[distutils]\n'}, temp_home)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1059: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:264: fake_home.joinpath(pydistutils_cfg).write_text('', encoding='utf-8')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1060: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:453: def test_custom_pydistutils(self, temp_home):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1061: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:455: pydistutils.cfg is found
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1062: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:457: jaraco.path.build({pydistutils_cfg: ''}, temp_home)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1063: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:458: config_path = temp_home / pydistutils_cfg
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1064: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_dist.py:462: def test_extra_pydistutils(self, monkeypatch, tmp_path):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1065: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_extension.py:1: """Tests for distutils.extension."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1066: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_extension.py:6: from distutils.extension import Extension, read_setup_file
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1067: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_file_util.py:1: """Tests for distutils.file_util."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1068: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_file_util.py:6: from distutils.errors import DistutilsFileError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1069: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_file_util.py:7: from distutils.file_util import copy_file, move_file
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1070: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_file_util.py:49: pytest.raises(DistutilsFileError),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1071: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_file_util.py:59: pytest.raises(DistutilsFileError),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1072: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_filelist.py:1: """Tests for distutils.filelist."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1073: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_filelist.py:6: from distutils import debug, filelist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1074: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_filelist.py:7: from distutils.errors import DistutilsTemplateError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1075: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_filelist.py:8: from distutils.filelist import FileList, glob_to_re, translate_pattern
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1076: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_filelist.py:199: with pytest.raises(DistutilsTemplateError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1077: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:1: """Tests for distutils.command.install."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1078: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:8: from distutils import sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1079: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:9: from distutils.command import install as install_module
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1080: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:10: from distutils.command.build_ext import build_ext
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1081: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:11: from distutils.command.install import INSTALL_SCHEMES, install
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1082: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:12: from distutils.core import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1083: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:13: from distutils.errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1084: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:14: from distutils.extension import Extension
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1085: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:15: from distutils.tests import missing_compiler_executable, support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1086: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:16: from distutils.util import is_mingw
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1087: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:32: reason="pypa/distutils#148",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1088: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:156: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1089: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:167: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1090: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:173: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1091: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install.py:180: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1092: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_data.py:1: """Tests for distutils.command.install_data."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1093: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_data.py:5: from distutils.command.install_data import install_data
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1094: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_data.py:6: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1095: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_headers.py:1: """Tests for distutils.command.install_headers."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1096: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_headers.py:4: from distutils.command.install_headers import install_headers
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1097: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_headers.py:5: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1098: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_lib.py:1: """Tests for distutils.command.install_data."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1099: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_lib.py:6: from distutils.command.install_lib import install_lib
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1100: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_lib.py:7: from distutils.errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1101: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_lib.py:8: from distutils.extension import Extension
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1102: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_lib.py:9: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1103: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_lib.py:29: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1104: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_lib.py:32: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1105: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_scripts.py:1: """Tests for distutils.command.install_scripts."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1106: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_scripts.py:4: from distutils.command.install_scripts import install_scripts
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1107: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_scripts.py:5: from distutils.core import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1108: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_install_scripts.py:6: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1109: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_log.py:1: """Tests for distutils.log"""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1110: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_log.py:4: from distutils._log import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1111: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_modified.py:1: """Tests for distutils._modified."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1112: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_modified.py:5: from distutils._modified import newer, newer_group, newer_pairwise, newer_pairwise_group
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1113: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_modified.py:6: from distutils.errors import DistutilsFileError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1114: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_modified.py:7: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1115: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_modified.py:18: # Raise DistutilsFileError if 'new_file' does not exist.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1116: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_modified.py:19: with pytest.raises(DistutilsFileError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1117: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:1: """Tests for distutils.command.sdist."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1118: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:8: from distutils.archive_util import ARCHIVE_FORMATS
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1119: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:9: from distutils.command.sdist import sdist, show_formats
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1120: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:10: from distutils.core import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1121: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:11: from distutils.errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1122: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:12: from distutils.filelist import FileList
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1123: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:25: from distutils.core import setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1124: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:32: # file GENERATED by distutils, do NOT edit
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1125: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:48: def project_dir(request, distutils_managed_tempdir):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1126: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:301: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1127: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:308: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1128: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sdist.py:375: == '# file GENERATED by distutils, do NOT edit'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1129: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:1: """Tests for distutils.spawn."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1130: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:7: from distutils.errors import DistutilsExecError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1131: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:8: from distutils.spawn import find_executable, spawn
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1132: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:9: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1133: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:33: with pytest.raises(DistutilsExecError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1134: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:78: 'distutils.spawn.os.confstr', return_value=tmp_dir, create=True
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1135: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:80: mock.patch('distutils.spawn.os.defpath', tmp_dir),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1136: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:94: mock.patch('distutils.spawn.os.confstr', return_value='', create=True),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1137: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:95: mock.patch('distutils.spawn.os.defpath', ''),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1138: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:112: 'distutils.spawn.os.confstr', side_effect=ValueError, create=True
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1139: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:114: mock.patch('distutils.spawn.os.defpath', tmp_dir),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1140: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:122: 'distutils.spawn.os.confstr', return_value=tmp_dir, create=True
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1141: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:124: mock.patch('distutils.spawn.os.defpath', ''),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1142: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:139: with pytest.raises(DistutilsExecError) as ctx:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1143: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:1: """Tests for distutils.sysconfig."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1144: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:4: import distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1145: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:9: from distutils import sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1146: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:10: from distutils.ccompiler import new_compiler  # noqa: F401
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1147: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:11: from distutils.unixccompiler import UnixCCompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1148: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:215: # the Distutils version of sysconfig is used for extension module
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1149: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:216: # builds, which happens earlier in the Distutils tests. This may
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1150: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:244: from distutils.core import Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1151: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:286: """Ensure distutils.sysconfig detects venvs from source tree builds."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1152: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:294: "import distutils.sysconfig; print(distutils.sysconfig.python_build)",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1153: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:296: distutils_path = os.path.dirname(os.path.dirname(distutils.__file__))
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1154: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:298: cmd, env={**os.environ, "PYTHONPATH": distutils_path}
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1155: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_sysconfig.py:309: See pypa/distutils#178.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1156: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_text_file.py:1: """Tests for distutils.text_file."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1157: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_text_file.py:3: from distutils.tests import support
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1158: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_text_file.py:4: from distutils.text_file import TextFile
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1159: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_util.py:1: """Tests for distutils.util."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1160: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_util.py:13: from distutils import sysconfig, util
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1161: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_util.py:14: from distutils.errors import DistutilsByteCompileError, DistutilsPlatformError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1162: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_util.py:15: from distutils.util import (
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1163: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_util.py:117: with pytest.raises(DistutilsPlatformError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1164: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_util.py:144: '/home/distutils',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1165: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_util.py:149: assert os.environ['HOME'] == '/home/distutils'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1166: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_util.py:229: # makes sure byte_compile raise a DistutilsError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1167: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_util.py:234: with pytest.raises(DistutilsByteCompileError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1168: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_version.py:1: """Tests for distutils.version."""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1169: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_version.py:3: import distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1170: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_version.py:4: from distutils.version import LooseVersion, StrictVersion
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1171: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\tests\test_version.py:11: with distutils.version.suppress_known_deprecation():
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1172: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\unixccompiler.py:9: importlib.import_module('distutils.ccompiler')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1173: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\util.py:1: """distutils.util
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1174: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\util.py:26: from .errors import DistutilsByteCompileError, DistutilsPlatformError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1175: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\util.py:43: # even with older Python versions when distutils was split out.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1176: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\util.py:78: from distutils import sysconfig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1177: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\util.py:113: raise DistutilsPlatformError(my_msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1178: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\util.py:162: raise DistutilsPlatformError(f"nothing known about platform '{os.name}'")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1179: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\util.py:394: raise DistutilsByteCompileError('byte-compiling is disabled.')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1180: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\util.py:420: from distutils.util import byte_compile
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1181: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\version.py:2: # distutils/version.py
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1182: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\version.py:40: message="distutils Version classes are deprecated.",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1183: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\version.py:56: "distutils Version classes are deprecated. Use packaging.version instead.",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1184: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_distutils\version.py:145: in the distutils documentation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1185: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_imp.py:3: from the deprecated imp module.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1186: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_imp.py:45: path = None  # imp compabilty
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1187: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_imp.py:46: suffix = mode = ''  # imp compatibility
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1188: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_imp.py:53: path = None  # imp compabilty
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1189: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_imp.py:54: suffix = mode = ''  # imp compatibility
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1190: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_scripts.py:21: from distutils.command.build_scripts import first_line_re
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1191: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_scripts.py:22: from distutils.util import get_platform
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1192: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_shutil.py:9: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1193: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_static.py:92: # (certain places of setuptools/distutils issue a warn if we use tuple instead of list)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1194: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_vendor\wheel\_bdist_wheel.py:410: # (distutils.command.install:change_roots bug)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1195: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_vendor\wheel\_setuptools_logging.py:16: for compatibility with distutils.log but may change in
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1196: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_vendor\wheel\cli\convert.py:206: these come straight from the distutils metadata, and are mandatory.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1197: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\_vendor\wheel-0.45.1.dist-info\entry_points.txt:4: [distutils.commands]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1198: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\archive_util.py:12: from distutils.errors import DistutilsError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1199: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\archive_util.py:25: class UnrecognizedFormat(DistutilsError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1200: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\build_meta.py:51: import distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1201: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\build_meta.py:52: from distutils.util import strtobool
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1202: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\build_meta.py:87: distutils.dist.Distribution with this class
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1203: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\build_meta.py:90: orig = distutils.core.Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1204: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\build_meta.py:91: distutils.core.Distribution = cls  # type: ignore[misc] # monkeypatching
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1205: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\build_meta.py:95: distutils.core.Distribution = orig  # type: ignore[misc] # monkeypatching
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1206: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\build_meta.py:151: pip install -e . --config-settings key=value
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1207: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\build_meta.py:164: """Translate ``config_settings`` into distutils-style command arguments.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1208: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\__init__.py:3: # Can't disable on the exact line because distutils doesn't exists on Python 3.12
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1209: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\__init__.py:4: # and type-checkers aren't aware of distutils_hack,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1210: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\__init__.py:5: # causing distutils.command.bdist.bdist.format_commands to be Any.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1211: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\__init__.py:9: from distutils.command.bdist import bdist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1212: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\__init__.py:13: # format_commands is a dict in vendored distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1213: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\__init__.py:14: # It used to be a list in older (stdlib) distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1214: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\alias.py:3: from distutils.errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1215: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\alias.py:36: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1216: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\bdist_egg.py:21: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1217: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\bdist_egg.py:22: from distutils.dir_util import mkpath, remove_tree
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1218: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\bdist_egg.py:452: raises DistutilsExecError.  Returns the name of the output zip file.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1219: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\bdist_rpm.py:4: import distutils.command.bdist_rpm as orig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1220: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\bdist_rpm.py:16: distribution: Distribution  # override distutils.dist.Distribution with setuptools.dist.Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1221: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\bdist_wheel.py:31: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1222: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\bdist_wheel.py:393: # (distutils.command.install:change_roots bug)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1223: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build.py:7: from distutils.command.build import build as _build
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1224: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build.py:13: distribution: Distribution  # override distutils.dist.Distribution with setuptools.dist.Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1225: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_clib.py:4: import distutils.command.build_clib as orig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1226: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_clib.py:5: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1227: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_clib.py:6: from distutils.errors import DistutilsSetupError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1228: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_clib.py:25: distribution: Distribution  # override distutils.dist.Distribution with setuptools.dist.Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1229: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_clib.py:31: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1230: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_clib.py:45: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1231: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_clib.py:56: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1232: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_clib.py:69: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1233: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:17: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1234: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:18: from distutils.ccompiler import new_compiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1235: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:19: from distutils.sysconfig import customize_compiler, get_config_var
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1236: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:23: from distutils.command.build_ext import build_ext as _build_ext
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1237: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:27: from Cython.Distutils.build_ext import build_ext as _build_ext
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1238: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:33: from distutils.command.build_ext import build_ext as _build_ext
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1239: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:37: # Not publicly exposed in typeshed distutils stubs, but this is done on purpose
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1240: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:39: from distutils.sysconfig import _config_vars as _CONFIG_VARS  # noqa: E402
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1241: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:45: # temporarily substitute the pyconfig.h variables so that distutils'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1242: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:89: distribution: Distribution  # override distutils.dist.Distribution with setuptools.dist.Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1243: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:205: # distutils 3.1 will also ask for module names
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1244: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:247: # hack so distutils' build_extension() builds a library instead
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1245: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:388: from distutils.util import byte_compile
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1246: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_ext.py:462: assert output_dir is None  # distutils build_ext doesn't pass this
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1247: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_py.py:19: import distutils.command.build_py as orig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1248: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_py.py:20: import distutils.errors
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1249: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_py.py:21: from distutils.util import convert_path
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1250: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_py.py:40: distribution: Distribution  # override distutils.dist.Distribution with setuptools.dist.Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1251: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_py.py:64: return super().copy_file(  # pyright: ignore[reportReturnType] # pypa/distutils#309
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1252: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_py.py:261: raise distutils.errors.DistutilsError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1253: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_py.py:320: from distutils.errors import DistutilsSetupError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1254: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\build_py.py:335: raise DistutilsSetupError(msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1255: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\dist_info.py:16: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1256: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\dist_info.py:17: from distutils.core import Command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1257: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\editable_wheel.py:248: cmd.inplace = True  # backward compatibility with distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1258: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:28: import distutils.errors
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1259: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:29: import distutils.filelist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1260: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:30: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1261: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:31: from distutils.errors import DistutilsInternalError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1262: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:32: from distutils.filelist import FileList as _FileList
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1263: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:33: from distutils.util import convert_path
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1264: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:233: raise distutils.errors.DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1265: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:302: raise distutils.errors.DistutilsFileError(msg) from e
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1266: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:382: raise DistutilsInternalError(msg) from None
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1267: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:448: for item in distutils.filelist.findall(match_dir)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1268: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:607: # ^-- fallback if dist comes from distutils or is a custom class
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1269: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\egg_info.py:629: Please extend command classes from setuptools instead of distutils.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1270: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install.py:11: import distutils.command.install as orig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1271: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install.py:12: from distutils.errors import DistutilsArgError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1272: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install.py:35: distribution: Distribution  # override distutils.dist.Distribution with setuptools.dist.Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1273: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install.py:49: # Type the same as distutils.command.install.install.sub_commands
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1274: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install.py:79: raise DistutilsArgError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1275: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install.py:99: 'run_command' method in 'distutils.dist', and *its* caller will be
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1276: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install.py:123: return caller_module == 'distutils.dist' and info.function == 'run_commands'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1277: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install_egg_info.py:8: from distutils import dir_util, log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1278: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install_lib.py:10: import distutils.command.install_lib as orig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1279: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install_lib.py:16: distribution: Distribution  # override distutils.dist.Distribution with setuptools.dist.Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1280: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install_lib.py:116: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1281: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install_scripts.py:9: import distutils.command.install_scripts as orig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1282: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install_scripts.py:10: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1283: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\install_scripts.py:16: distribution: Distribution  # override distutils.dist.Distribution with setuptools.dist.Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1284: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\rotate.py:8: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1285: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\rotate.py:9: from distutils.errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1286: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\rotate.py:10: from distutils.util import convert_path
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1287: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\rotate.py:32: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1288: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\rotate.py:37: raise DistutilsOptionError("Must specify number of files to keep")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1289: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\rotate.py:41: raise DistutilsOptionError("--keep must be an integer") from e
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1290: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\sdist.py:13: import distutils.command.sdist as orig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1291: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\sdist.py:14: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1292: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\sdist.py:52: distribution: Distribution  # override distutils.dist.Distribution with setuptools.dist.Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1293: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\sdist.py:196: return first_line != b'# file GENERATED by distutils, do NOT edit\n'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1294: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:7: import distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1295: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:8: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1296: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:9: from distutils.errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1297: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:10: from distutils.util import convert_path
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1298: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:16: """Get the filename of the distutils, local, global, or per-user config
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1299: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:23: return os.path.join(os.path.dirname(distutils.__file__), 'distutils.cfg')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1300: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:26: return os.path.expanduser(convert_path(f"~/{dot}pydistutils.cfg"))
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1301: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:76: ('global-config', 'g', "save options to the site-wide distutils.cfg file"),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1302: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:77: ('user-config', 'u', "save options to the current user's pydistutils.cfg file"),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1303: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:102: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1304: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:132: raise DistutilsOptionError("Must specify --command *and* --option")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1305: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\command\setopt.py:134: raise DistutilsOptionError("Must specify --set-value or --remove")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1306: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_apply_pyprojecttoml.py:35: from distutils.dist import _OptionsList  # Comes from typeshed
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1307: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_apply_pyprojecttoml.py:310: for cmd, config in pyproject.get("tool", {}).get("distutils", {}).items():
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1308: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_apply_pyprojecttoml.py:330: unloaded_entry_points = metadata.entry_points(group='distutils.commands')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1309: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_apply_pyprojecttoml.py:381: """Apply distutils metadata validation but preserve "static" behaviour"""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1310: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:35: raise JsonSchemaValueException("" + (name_prefix or "data") + " must be object", value=data, name="" + (name_prefix or "data") + "", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/pyproject-toml/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', "with meaning similar to the one defined in `core metadata's Description", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://peps.python.org/pep-0621/#license>`_.', 'oneOf': [{'type': 'string', 'description': 'An SPDX license identifier', 'format': 'SPDX'}, {'type': 'object', 'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'type': 'object', 'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'license-files': {'description': 'Paths or globs to paths of license files', 'type': 'array', 'items': {'type': 'string'}}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': ["The people or organizations considered to be the 'authors' of the project.", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': ["The people or organizations considered to be the 'maintainers' of the project.", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'license-files', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'allOf': [{'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as "Required", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}}, {'if': {'required': ['license-files']}, 'then': {'properties': {'license': {'type': 'string'}}}}], 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html', 'title': '``tool.distutils`` table', '$$description': ['**EXPERIMENTAL** (NOT OFFICIALLY SUPPORTED): Use ``tool.distutils``', 'subtables to configure arguments for ``distutils`` commands.', 'Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` commands via `distutils configuration files', '<https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html>`_.', 'See also `the old Python docs <https://docs.python.org/3.11/install/>_`.'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html', 'title': '``tool.setuptools`` table', '$$description': ['``setuptools``-specific configurations that can be set by users that require', 'customization.', 'These configurations are completely optional and probably can be skipped when', 'creating simple packages. They are equivalent to some of the `Keywords', '<https://setuptools.pypa.io/en/latest/references/keywords.html>`_', 'used by the ``setup.py`` file, and can be set via the ``tool.setuptools`` table.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration>`_', 'that are not covered by :pep:`621`; and intentionally excludes ``dependency_links``', 'and ``setup_requires`` (incompatible with modern workflows/standards).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'$$description': ['Whether the project can be safely installed and run from a zip file.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'boolean'}, 'script-files': {'$$description': ['Legacy way of defining scripts (entry-points are preferred).', 'Equivalent to the ``script`` keyword in ``setup.py``', '(it was renamed to avoid confusion with entry-point based ``project.scripts``', 'defined in :pep:`621`).', '**DISCOURAGED**: generic script wrappers are tricky and may not work properly.', 'Whenever possible, please use ``project.scripts`` instead.'], 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'$ref': '#/definitions/package-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'const': ''}, {'$ref': '#/definitions/package-name'}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html', 'description': '**DEPRECATED**: use implicit namespaces instead (:pep:`420`).'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'ext-modules': {'description': 'Extension modules to be compiled by setuptools', 'type': 'array', 'items': {'$ref': '#/definitions/ext-module'}}, 'data-files': {'$$description': ['``dict``-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', '**DISCOURAGED**: please notice this might not work as expected with wheels.', 'Whenever possible, consider using data files inside the package directories', '(or create a new namespace package that only contains data files).', 'See `data files support', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., "dotted" form with module), e.g.::\n\n', '    cmdclass = {mycmd = "pkg.subpkg.module.CommandClass"}\n\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['**PROVISIONAL**: list of glob patterns for all license files being distributed.', '(likely to become standard with :pep:`639`).', "By default: ``['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']``"], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.', 'Also ensure to set ``project.dynamic`` accordingly.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive-for-dependencies'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'type': 'string', 'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive-for-dependencies'}}}, 'readme': {'type': 'object', 'anyOf': [{'$ref': '#/definitions/file-directive'}, {'type': 'object', 'properties': {'content-type': {'type': 'string'}, 'file': {'$ref': '#/definitions/file-directive/properties/file'}}, 'additionalProperties': False}], 'required': ['file']}}}}, 'definitions': {'package-name': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}, 'ext-module': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}, 'file-directive': {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'file-directive-for-dependencies': {'title': "'file:' directive for dependencies", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}, 'attr-directive': {'title': "'attr:' directive", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': "'find:' directive", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, 'dependency-groups': {'type': 'object', 'description': 'Dependency groups following PEP 735', 'additionalProperties': False, 'patternProperties': {'^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9])$': {'type': 'array', 'items': {'oneOf': [{'type': 'string', 'description': 'Python package specifiers following PEP 508', 'format': 'pep508'}, {'type': 'object', 'additionalProperties': False, 'properties': {'include-group': {'description': 'Another dependency group to include in this one', 'type': 'string', 'pattern': '^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9])$'}}}]}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/pyproject-toml/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', "with meaning similar to the one defined in `core metadata's Description", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://peps.python.org/pep-0621/#license>`_.', 'oneOf': [{'type': 'string', 'description': 'An SPDX license identifier', 'format': 'SPDX'}, {'type': 'object', 'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'type': 'object', 'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'license-files': {'description': 'Paths or globs to paths of license files', 'type': 'array', 'items': {'type': 'string'}}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': ["The people or organizations considered to be the 'authors' of the project.", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': ["The people or organizations considered to be the 'maintainers' of the project.", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'license-files', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'allOf': [{'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as "Required", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}}, {'if': {'required': ['license-files']}, 'then': {'properties': {'license': {'type': 'string'}}}}], 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='type')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1311: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:90: raise JsonSchemaValueException("" + (name_prefix or "data") + ".tool must be object", value=data__tool, name="" + (name_prefix or "data") + ".tool", definition={'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html', 'title': '``tool.distutils`` table', '$$description': ['**EXPERIMENTAL** (NOT OFFICIALLY SUPPORTED): Use ``tool.distutils``', 'subtables to configure arguments for ``distutils`` commands.', 'Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` commands via `distutils configuration files', '<https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html>`_.', 'See also `the old Python docs <https://docs.python.org/3.11/install/>_`.'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html', 'title': '``tool.setuptools`` table', '$$description': ['``setuptools``-specific configurations that can be set by users that require', 'customization.', 'These configurations are completely optional and probably can be skipped when', 'creating simple packages. They are equivalent to some of the `Keywords', '<https://setuptools.pypa.io/en/latest/references/keywords.html>`_', 'used by the ``setup.py`` file, and can be set via the ``tool.setuptools`` table.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration>`_', 'that are not covered by :pep:`621`; and intentionally excludes ``dependency_links``', 'and ``setup_requires`` (incompatible with modern workflows/standards).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'$$description': ['Whether the project can be safely installed and run from a zip file.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'boolean'}, 'script-files': {'$$description': ['Legacy way of defining scripts (entry-points are preferred).', 'Equivalent to the ``script`` keyword in ``setup.py``', '(it was renamed to avoid confusion with entry-point based ``project.scripts``', 'defined in :pep:`621`).', '**DISCOURAGED**: generic script wrappers are tricky and may not work properly.', 'Whenever possible, please use ``project.scripts`` instead.'], 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'$ref': '#/definitions/package-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'const': ''}, {'$ref': '#/definitions/package-name'}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html', 'description': '**DEPRECATED**: use implicit namespaces instead (:pep:`420`).'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'ext-modules': {'description': 'Extension modules to be compiled by setuptools', 'type': 'array', 'items': {'$ref': '#/definitions/ext-module'}}, 'data-files': {'$$description': ['``dict``-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', '**DISCOURAGED**: please notice this might not work as expected with wheels.', 'Whenever possible, consider using data files inside the package directories', '(or create a new namespace package that only contains data files).', 'See `data files support', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., "dotted" form with module), e.g.::\n\n', '    cmdclass = {mycmd = "pkg.subpkg.module.CommandClass"}\n\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['**PROVISIONAL**: list of glob patterns for all license files being distributed.', '(likely to become standard with :pep:`639`).', "By default: ``['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']``"], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.', 'Also ensure to set ``project.dynamic`` accordingly.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive-for-dependencies'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'type': 'string', 'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive-for-dependencies'}}}, 'readme': {'type': 'object', 'anyOf': [{'$ref': '#/definitions/file-directive'}, {'type': 'object', 'properties': {'content-type': {'type': 'string'}, 'file': {'$ref': '#/definitions/file-directive/properties/file'}}, 'additionalProperties': False}], 'required': ['file']}}}}, 'definitions': {'package-name': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}, 'ext-module': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}, 'file-directive': {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'file-directive-for-dependencies': {'title': "'file:' directive for dependencies", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}, 'attr-directive': {'title': "'attr:' directive", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': "'find:' directive", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, rule='type')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1312: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:94: if "distutils" in data__tool_keys:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1313: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:95: data__tool_keys.remove("distutils")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1314: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:96: data__tool__distutils = data__tool["distutils"]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1315: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:97: validate_https___setuptools_pypa_io_en_latest_deprecated_distutils_configfile_html(data__tool__distutils, custom_formats, (name_prefix or "data") + ".tool.distutils")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1316: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:154: raise JsonSchemaValueException("" + (name_prefix or "data") + " must not contain "+str(data_keys)+" properties", value=data, name="" + (name_prefix or "data") + "", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/pyproject-toml/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', "with meaning similar to the one defined in `core metadata's Description", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://peps.python.org/pep-0621/#license>`_.', 'oneOf': [{'type': 'string', 'description': 'An SPDX license identifier', 'format': 'SPDX'}, {'type': 'object', 'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'type': 'object', 'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'license-files': {'description': 'Paths or globs to paths of license files', 'type': 'array', 'items': {'type': 'string'}}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': ["The people or organizations considered to be the 'authors' of the project.", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': ["The people or organizations considered to be the 'maintainers' of the project.", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'license-files', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'allOf': [{'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as "Required", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}}, {'if': {'required': ['license-files']}, 'then': {'properties': {'license': {'type': 'string'}}}}], 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html', 'title': '``tool.distutils`` table', '$$description': ['**EXPERIMENTAL** (NOT OFFICIALLY SUPPORTED): Use ``tool.distutils``', 'subtables to configure arguments for ``distutils`` commands.', 'Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` commands via `distutils configuration files', '<https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html>`_.', 'See also `the old Python docs <https://docs.python.org/3.11/install/>_`.'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html', 'title': '``tool.setuptools`` table', '$$description': ['``setuptools``-specific configurations that can be set by users that require', 'customization.', 'These configurations are completely optional and probably can be skipped when', 'creating simple packages. They are equivalent to some of the `Keywords', '<https://setuptools.pypa.io/en/latest/references/keywords.html>`_', 'used by the ``setup.py`` file, and can be set via the ``tool.setuptools`` table.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration>`_', 'that are not covered by :pep:`621`; and intentionally excludes ``dependency_links``', 'and ``setup_requires`` (incompatible with modern workflows/standards).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'$$description': ['Whether the project can be safely installed and run from a zip file.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'boolean'}, 'script-files': {'$$description': ['Legacy way of defining scripts (entry-points are preferred).', 'Equivalent to the ``script`` keyword in ``setup.py``', '(it was renamed to avoid confusion with entry-point based ``project.scripts``', 'defined in :pep:`621`).', '**DISCOURAGED**: generic script wrappers are tricky and may not work properly.', 'Whenever possible, please use ``project.scripts`` instead.'], 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'$ref': '#/definitions/package-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'const': ''}, {'$ref': '#/definitions/package-name'}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html', 'description': '**DEPRECATED**: use implicit namespaces instead (:pep:`420`).'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'ext-modules': {'description': 'Extension modules to be compiled by setuptools', 'type': 'array', 'items': {'$ref': '#/definitions/ext-module'}}, 'data-files': {'$$description': ['``dict``-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', '**DISCOURAGED**: please notice this might not work as expected with wheels.', 'Whenever possible, consider using data files inside the package directories', '(or create a new namespace package that only contains data files).', 'See `data files support', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., "dotted" form with module), e.g.::\n\n', '    cmdclass = {mycmd = "pkg.subpkg.module.CommandClass"}\n\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['**PROVISIONAL**: list of glob patterns for all license files being distributed.', '(likely to become standard with :pep:`639`).', "By default: ``['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']``"], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.', 'Also ensure to set ``project.dynamic`` accordingly.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive-for-dependencies'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'type': 'string', 'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive-for-dependencies'}}}, 'readme': {'type': 'object', 'anyOf': [{'$ref': '#/definitions/file-directive'}, {'type': 'object', 'properties': {'content-type': {'type': 'string'}, 'file': {'$ref': '#/definitions/file-directive/properties/file'}}, 'additionalProperties': False}], 'required': ['file']}}}}, 'definitions': {'package-name': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}, 'ext-module': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}, 'file-directive': {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'file-directive-for-dependencies': {'title': "'file:' directive for dependencies", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}, 'attr-directive': {'title': "'attr:' directive", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': "'find:' directive", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, 'dependency-groups': {'type': 'object', 'description': 'Dependency groups following PEP 735', 'additionalProperties': False, 'patternProperties': {'^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9])$': {'type': 'array', 'items': {'oneOf': [{'type': 'string', 'description': 'Python package specifiers following PEP 508', 'format': 'pep508'}, {'type': 'object', 'additionalProperties': False, 'properties': {'include-group': {'description': 'Another dependency group to include in this one', 'type': 'string', 'pattern': '^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9])$'}}}]}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/pyproject-toml/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', "with meaning similar to the one defined in `core metadata's Description", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://peps.python.org/pep-0621/#license>`_.', 'oneOf': [{'type': 'string', 'description': 'An SPDX license identifier', 'format': 'SPDX'}, {'type': 'object', 'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'type': 'object', 'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'license-files': {'description': 'Paths or globs to paths of license files', 'type': 'array', 'items': {'type': 'string'}}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': ["The people or organizations considered to be the 'authors' of the project.", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': ["The people or organizations considered to be the 'maintainers' of the project.", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'license-files', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'allOf': [{'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as "Required", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}}, {'if': {'required': ['license-files']}, 'then': {'properties': {'license': {'type': 'string'}}}}], 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='additionalProperties')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1317: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:159: raise JsonSchemaValueException("" + (name_prefix or "data") + " must be object", value=data, name="" + (name_prefix or "data") + "", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html', 'title': '``tool.setuptools`` table', '$$description': ['``setuptools``-specific configurations that can be set by users that require', 'customization.', 'These configurations are completely optional and probably can be skipped when', 'creating simple packages. They are equivalent to some of the `Keywords', '<https://setuptools.pypa.io/en/latest/references/keywords.html>`_', 'used by the ``setup.py`` file, and can be set via the ``tool.setuptools`` table.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration>`_', 'that are not covered by :pep:`621`; and intentionally excludes ``dependency_links``', 'and ``setup_requires`` (incompatible with modern workflows/standards).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'$$description': ['Whether the project can be safely installed and run from a zip file.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'boolean'}, 'script-files': {'$$description': ['Legacy way of defining scripts (entry-points are preferred).', 'Equivalent to the ``script`` keyword in ``setup.py``', '(it was renamed to avoid confusion with entry-point based ``project.scripts``', 'defined in :pep:`621`).', '**DISCOURAGED**: generic script wrappers are tricky and may not work properly.', 'Whenever possible, please use ``project.scripts`` instead.'], 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}}, {'$id': '#/definitions/find-directive', 'title': "'find:' directive", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'const': ''}, {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html', 'description': '**DEPRECATED**: use implicit namespaces instead (:pep:`420`).'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'ext-modules': {'description': 'Extension modules to be compiled by setuptools', 'type': 'array', 'items': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}}, 'data-files': {'$$description': ['``dict``-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', '**DISCOURAGED**: please notice this might not work as expected with wheels.', 'Whenever possible, consider using data files inside the package directories', '(or create a new namespace package that only contains data files).', 'See `data files support', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., "dotted" form with module), e.g.::\n\n', '    cmdclass = {mycmd = "pkg.subpkg.module.CommandClass"}\n\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['**PROVISIONAL**: list of glob patterns for all license files being distributed.', '(likely to become standard with :pep:`639`).', "By default: ``['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']``"], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.', 'Also ensure to set ``project.dynamic`` accordingly.'], 'oneOf': [{'title': "'attr:' directive", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'title': "'file:' directive for dependencies", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'type': 'string', 'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'title': "'file:' directive for dependencies", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}}}, 'readme': {'type': 'object', 'anyOf': [{'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'type': 'object', 'properties': {'content-type': {'type': 'string'}, 'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'additionalProperties': False}], 'required': ['file']}}}}, 'definitions': {'package-name': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}, 'ext-module': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}, 'file-directive': {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'file-directive-for-dependencies': {'title': "'file:' directive for dependencies", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'attr-directive': {'title': "'attr:' directive", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': "'find:' directive", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='type')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1318: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:455: raise JsonSchemaValueException("" + (name_prefix or "data") + ".cmdclass must be object", value=data__cmdclass, name="" + (name_prefix or "data") + ".cmdclass", definition={'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., "dotted" form with module), e.g.::\n\n', '    cmdclass = {mycmd = "pkg.subpkg.module.CommandClass"}\n\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, rule='type')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1319: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:589: raise JsonSchemaValueException("" + (name_prefix or "data") + " must not contain "+str(data_keys)+" properties", value=data, name="" + (name_prefix or "data") + "", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html', 'title': '``tool.setuptools`` table', '$$description': ['``setuptools``-specific configurations that can be set by users that require', 'customization.', 'These configurations are completely optional and probably can be skipped when', 'creating simple packages. They are equivalent to some of the `Keywords', '<https://setuptools.pypa.io/en/latest/references/keywords.html>`_', 'used by the ``setup.py`` file, and can be set via the ``tool.setuptools`` table.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration>`_', 'that are not covered by :pep:`621`; and intentionally excludes ``dependency_links``', 'and ``setup_requires`` (incompatible with modern workflows/standards).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'$$description': ['Whether the project can be safely installed and run from a zip file.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'boolean'}, 'script-files': {'$$description': ['Legacy way of defining scripts (entry-points are preferred).', 'Equivalent to the ``script`` keyword in ``setup.py``', '(it was renamed to avoid confusion with entry-point based ``project.scripts``', 'defined in :pep:`621`).', '**DISCOURAGED**: generic script wrappers are tricky and may not work properly.', 'Whenever possible, please use ``project.scripts`` instead.'], 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}}, {'$id': '#/definitions/find-directive', 'title': "'find:' directive", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'const': ''}, {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html', 'description': '**DEPRECATED**: use implicit namespaces instead (:pep:`420`).'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'ext-modules': {'description': 'Extension modules to be compiled by setuptools', 'type': 'array', 'items': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}}, 'data-files': {'$$description': ['``dict``-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', '**DISCOURAGED**: please notice this might not work as expected with wheels.', 'Whenever possible, consider using data files inside the package directories', '(or create a new namespace package that only contains data files).', 'See `data files support', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., "dotted" form with module), e.g.::\n\n', '    cmdclass = {mycmd = "pkg.subpkg.module.CommandClass"}\n\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['**PROVISIONAL**: list of glob patterns for all license files being distributed.', '(likely to become standard with :pep:`639`).', "By default: ``['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']``"], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.', 'Also ensure to set ``project.dynamic`` accordingly.'], 'oneOf': [{'title': "'attr:' directive", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'title': "'file:' directive for dependencies", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'type': 'string', 'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'title': "'file:' directive for dependencies", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}}}, 'readme': {'type': 'object', 'anyOf': [{'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'type': 'object', 'properties': {'content-type': {'type': 'string'}, 'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'additionalProperties': False}], 'required': ['file']}}}}, 'definitions': {'package-name': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}, 'ext-module': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}, 'file-directive': {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'file-directive-for-dependencies': {'title': "'file:' directive for dependencies", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$id': '#/definitions/file-directive', 'title': "'file:' directive", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'attr-directive': {'title': "'attr:' directive", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': "'find:' directive", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', "Can container shell-style wildcards (e.g. ``'pkg.*'``)"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='additionalProperties')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1320: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:967: def validate_https___setuptools_pypa_io_en_latest_deprecated_distutils_configfile_html(data, custom_formats={}, name_prefix=None):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1321: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:969: raise JsonSchemaValueException("" + (name_prefix or "data") + " must be object", value=data, name="" + (name_prefix or "data") + "", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html', 'title': '``tool.distutils`` table', '$$description': ['**EXPERIMENTAL** (NOT OFFICIALLY SUPPORTED): Use ``tool.distutils``', 'subtables to configure arguments for ``distutils`` commands.', 'Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` commands via `distutils configuration files', '<https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html>`_.', 'See also `the old Python docs <https://docs.python.org/3.11/install/>_`.'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, rule='type')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1322: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\_validate_pyproject\fastjsonschema_validations.py:977: raise JsonSchemaValueException("" + (name_prefix or "data") + ".global must be object", value=data__global, name="" + (name_prefix or "data") + ".global", definition={'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}, rule='type')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1323: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\expand.py:42: from distutils.errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1324: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\expand.py:149: raise DistutilsOptionError(msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1325: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\pyprojecttoml.py:119: if "distutils" in tool_table:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1326: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\pyprojecttoml.py:120: _ExperimentalConfiguration.emit(subject="[tool.distutils]")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1327: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\config\setupcfg.py:37: from distutils.dist import DistributionMetadata
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1328: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\discovery.py:50: import _distutils_hack.override  # noqa: F401
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1329: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\discovery.py:54: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1330: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\discovery.py:55: from distutils.util import convert_path
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1331: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\discovery.py:369: # ^ Some projects use numpy.distutils.misc_util.Configuration
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1332: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:36: import distutils.cmd
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1333: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:37: import distutils.command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1334: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:38: import distutils.core
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1335: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:39: import distutils.dist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1336: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:40: import distutils.log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1337: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:41: from distutils.debug import DEBUG
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1338: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:42: from distutils.errors import DistutilsOptionError, DistutilsSetupError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1339: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:43: from distutils.fancy_getopt import translate_longopt
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1340: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:44: from distutils.util import strtobool
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1341: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:89: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1342: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:103: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1343: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:114: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1344: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:119: distutils.log.warn(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1345: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:141: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1346: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:154: raise DistutilsSetupError(msg) from None
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1347: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:168: raise DistutilsSetupError(f"{attr!r} must be a boolean value (got {value!r})")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1348: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:176: raise DistutilsSetupError(f"{attr} is invalid.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1349: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:190: raise DistutilsSetupError(msg) from error
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1350: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:199: raise DistutilsSetupError(msg) from error
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1351: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:207: raise DistutilsSetupError(e) from e
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1352: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:213: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1353: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:219: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1354: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:228: distutils.log.warn(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1355: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:237: from distutils.core import Distribution as _Distribution
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1356: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:239: _Distribution = get_unpatched(distutils.core.Distribution)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1357: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:245: This is an enhanced version of 'distutils.dist.Distribution' that
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1358: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:288: _DISTUTILS_UNSUPPORTED_METADATA = {
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1359: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:315: for ep in metadata.entry_points(group='distutils.setup_keywords'):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1360: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:318: metadata_only = set(self._DISTUTILS_UNSUPPORTED_METADATA)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1361: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:346: raise DistutilsSetupError(msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1362: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:350: Fill-in missing metadata fields not supported by distutils.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1363: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:355: for option, default in self._DISTUTILS_UNSUPPORTED_METADATA.items():
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1364: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:548: Adapted from distutils.dist.Distribution.parse_config_files,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1365: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:623: raise DistutilsOptionError(e) from e
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1366: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:693: (Adopted from distutils.dist.Distribution._set_command_options)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1367: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:722: raise DistutilsOptionError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1368: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:726: raise DistutilsOptionError(e) from e
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1369: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:801: for ep in metadata.entry_points(group='distutils.setup_keywords'):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1370: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:833: def get_command_class(self, command: str) -> type[distutils.cmd.Command]:  # type: ignore[override] # Not doing complex overrides yet
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1371: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:844: eps = metadata.entry_points(group='distutils.commands', name=command)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1372: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:852: for ep in metadata.entry_points(group='distutils.commands'):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1373: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:859: for ep in metadata.entry_points(group='distutils.commands'):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1374: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:922: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1375: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:928: raise DistutilsSetupError(f"{name}: No such distribution setting") from e
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1376: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:930: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1377: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:940: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1378: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:946: raise DistutilsSetupError(f"{name}: No such distribution setting") from e
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1379: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:950: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1380: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:982: raise DistutilsSetupError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1381: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\dist.py:1114: return {*distutils.command.__all__, *eps}
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1382: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:8: from distutils import errors as _distutils_errors
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1383: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:10: # Re-export errors from distutils to facilitate the migration to PEP632
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1384: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:12: ByteCompileError = _distutils_errors.DistutilsByteCompileError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1385: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:13: CCompilerError = _distutils_errors.CCompilerError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1386: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:14: ClassError = _distutils_errors.DistutilsClassError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1387: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:15: CompileError = _distutils_errors.CompileError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1388: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:16: ExecError = _distutils_errors.DistutilsExecError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1389: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:17: FileError = _distutils_errors.DistutilsFileError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1390: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:18: InternalError = _distutils_errors.DistutilsInternalError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1391: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:19: LibError = _distutils_errors.LibError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1392: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:20: LinkError = _distutils_errors.LinkError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1393: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:21: ModuleError = _distutils_errors.DistutilsModuleError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1394: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:22: OptionError = _distutils_errors.DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1395: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:23: PlatformError = _distutils_errors.DistutilsPlatformError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1396: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:24: PreprocessError = _distutils_errors.PreprocessError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1397: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:25: SetupError = _distutils_errors.DistutilsSetupError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1398: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:26: TemplateError = _distutils_errors.DistutilsTemplateError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1399: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:27: UnknownFileError = _distutils_errors.UnknownFileError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1400: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:30: BaseError = _distutils_errors.DistutilsError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1401: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:33: class InvalidConfigError(OptionError):  # type: ignore[valid-type, misc] # distutils imports are `Any` on python 3.12+
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1402: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:37: class RemovedConfigError(OptionError):  # type: ignore[valid-type, misc] # distutils imports are `Any` on python 3.12+
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1403: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:41: class RemovedCommandError(BaseError, RuntimeError):  # type: ignore[valid-type, misc] # distutils imports are `Any` on python 3.12+
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1404: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:44: Since ``setuptools`` is built on ``distutils``, simply removing a command
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1405: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:45: from ``setuptools`` will make the behavior fall back to ``distutils``; this
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1406: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:46: error is raised if a command exists in ``distutils`` but has been actively
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1407: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\errors.py:51: class PackageDiscoveryError(BaseError, RuntimeError):  # type: ignore[valid-type, misc] # distutils imports are `Any` on python 3.12+
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1408: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\extension.py:11: import distutils.core
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1409: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\extension.py:12: import distutils.errors
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1410: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\extension.py:13: import distutils.extension
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1411: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\extension.py:20: cython_impl = 'Cython.Distutils.build_ext'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1412: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\extension.py:33: from distutils.core import Extension as _Extension
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1413: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\extension.py:35: _Extension = get_unpatched(distutils.core.Extension)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1414: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\installer.py:18: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1415: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\installer.py:19: from distutils.errors import DistutilsError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1416: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\installer.py:78: raise DistutilsError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1417: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\installer.py:123: raise DistutilsError(str(e)) from e
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1418: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\installer.py:153: If you are using pip, you can try `pip install --use-pep517`.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1419: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\logging.py:7: import distutils.log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1420: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\logging.py:18: for compatibility with distutils.log but may change in
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1421: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\logging.py:29: if inspect.ismodule(distutils.dist.log):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1422: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\logging.py:30: monkey.patch_func(set_threshold, distutils.log, 'set_threshold')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1423: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\logging.py:31: # For some reason `distutils.log` module is getting cached in `distutils.dist`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1424: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\logging.py:33: # implying: id(distutils.log) != id(distutils.dist.log).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1425: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\logging.py:35: distutils.dist.log = distutils.log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1426: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\modified.py:2: # Ensure a DistutilsError raised by these methods is the same as distutils.errors.DistutilsError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1427: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\modified.py:3: from distutils._modified import (
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1428: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\modified.py:10: # fallback for SETUPTOOLS_USE_DISTUTILS=stdlib, because _modified never existed in stdlib
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1429: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\modified.py:11: from ._distutils._modified import (
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1430: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:2: Monkey patching of distutils.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1431: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:13: import distutils.filelist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1432: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:55: """Protect against re-patching the distutils if reloaded
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1433: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:57: Also ensures that no other distutils extension monkeypatched the distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1434: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:66: if not base.__module__.startswith('distutils'):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1435: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:67: msg = f"distutils has already been patched by {cls!r}"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1436: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:75: # we can't patch distutils.cmd, alas
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1437: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:76: distutils.core.Command = setuptools.Command  # type: ignore[misc,assignment] # monkeypatching
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1438: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:80: # Install Distribution throughout the distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1439: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:81: for module in distutils.dist, distutils.core, distutils.cmd:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1440: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:85: distutils.core.Extension = setuptools.extension.Extension  # type: ignore[misc,assignment] # monkeypatching
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1441: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:86: distutils.extension.Extension = setuptools.extension.Extension  # type: ignore[misc,assignment] # monkeypatching
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1442: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:87: if 'distutils.command.build_ext' in sys.modules:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1443: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:89: 'distutils.command.build_ext'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1444: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\monkey.py:105: setattr(distutils.dist.DistributionMetadata, attr, new_val)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1445: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\msvc.py:20: import distutils.errors
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1446: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\msvc.py:390: raise distutils.errors.DistutilsPlatformError(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1447: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\msvc.py:520: raise distutils.errors.DistutilsPlatformError(msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1448: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\msvc.py:922: raise distutils.errors.DistutilsPlatformError(err)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1449: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\msvc.py:1534: raise distutils.errors.DistutilsPlatformError(msg)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1450: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\namespaces.py:6: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1451: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_expand.py:11: from distutils.errors import DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1452: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_expand.py:56: with pytest.raises(DistutilsOptionError, match=cannot_access_msg):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1453: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_expand.py:60: with pytest.raises(DistutilsOptionError, match=cannot_access_secrets_msg):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1454: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_expand.py:65: with pytest.raises(DistutilsOptionError, match=cannot_access_msg):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1455: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_pyprojecttoml.py:10: import setuptools  # noqa: F401 # force distutils.core to be patched
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1456: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_pyprojecttoml.py:21: import distutils.core
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1457: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_pyprojecttoml.py:77: [tool.distutils.sdist]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1458: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_pyprojecttoml.py:80: [tool.distutils.bdist_wheel]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1459: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_pyprojecttoml.py:367: dist = distutils.core.run_setup("setup.py", {}, stop_after="config")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1460: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_setupcfg.py:17: from distutils.errors import DistutilsFileError, DistutilsOptionError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1461: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_setupcfg.py:97: with pytest.raises(DistutilsFileError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1462: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_setupcfg.py:195: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1463: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_setupcfg.py:299: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1464: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_setupcfg.py:353: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1465: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_setupcfg.py:567: with pytest.raises(DistutilsOptionError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1466: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_setupcfg.py:908: "from distutils.core import Command\nclass CustomCmd(Command): pass\n",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1467: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_setupcfg.py:951: # the init of the parent distutils Distribution object via
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1468: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_setupcfg.py:954: # It's possible distutils calls out to various keyword
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1469: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_setupcfg.py:955: # implementations (i.e. distutils.setup_keywords entry points)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1470: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\config\test_setupcfg.py:962: # see self._DISTUTILS_UNSUPPORTED_METADATA
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1471: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\contexts.py:52: distutils commands.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1472: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\environment.py:12: # Some version of PyPy will import distutils on startup, implicitly
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1473: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_bdist_deprecations.py:14: @mock.patch('distutils.command.bdist_rpm.bdist_rpm')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1474: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_bdist_deprecations.py:15: def test_bdist_rpm_warning(distutils_cmd, tmpdir_cwd):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1475: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_bdist_deprecations.py:28: distutils_cmd.run.assert_called_once()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1476: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_bdist_wheel.py:25: from distutils.core import run_setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1477: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_bdist_wheel.py:296: """Avoid messing with setuptools/distutils internals"""
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1478: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_clib.py:9: from distutils.errors import DistutilsSetupError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1479: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_clib.py:21: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1480: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_clib.py:26: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1481: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_clib.py:31: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1482: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_clib.py:36: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1483: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_ext.py:18: import distutils.command.build_ext as orig
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1484: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_ext.py:19: from distutils.sysconfig import get_config_var
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1485: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_ext.py:28: result as distutils, even if the fullname
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1486: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_ext.py:199: Historically, distutils "logged" by printing to sys.std*.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1487: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_meta.py:164: # Therefore, we cannot use `distutils.core.run_setup(..., stop_after=...)`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1488: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_meta.py:165: # to obtain a distribution object first, and then run the distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1489: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_meta.py:362: [tool.distutils.sdist]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1490: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_py.py:173: if os.getenv("SETUPTOOLS_USE_DISTUTILS") == "stdlib":
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1491: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_py.py:179: module="distutils.text_file",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1492: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_build_py.py:180: # This warning is already fixed in pypa/distutils but not in stdlib
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1493: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_config_discovery.py:11: import setuptools  # noqa: F401 # force distutils.core to be patched
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1494: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_config_discovery.py:21: import distutils.core
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1495: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_config_discovery.py:613: return run(cmd, env={'DISTUTILS_DEBUG': ''})
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1496: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_config_discovery.py:624: distutils.core.run_setup("setup.py", {}, stop_after="init"),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1497: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_dist.py:15: from distutils.errors import DistutilsSetupError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1498: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_dist.py:137: with pytest.raises(DistutilsSetupError, match=re.escape(expected_message)):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1499: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_dist.py:153: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1500: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_dist.py:158: with pytest.raises(DistutilsSetupError, match='missing.*name'):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1501: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:25: def find_distutils(venv, imports='distutils', env=None, **kwargs):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1502: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:26: py_cmd = 'import {imports}; print(distutils.__file__)'.format(**locals())
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1503: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:35: is_distutils = lambda finder: finder.__class__.__name__ == "DistutilsMetaFinder"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1504: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:36: print(len(list(filter(is_distutils, sys.meta_path))))
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1505: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:43: skip_without_stdlib_distutils = pytest.mark.skipif(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1506: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:45: reason='stdlib distutils is removed from Python 3.12+',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1507: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:49: @skip_without_stdlib_distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1508: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:50: def test_distutils_stdlib(venv):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1509: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:52: Ensure stdlib distutils is used when appropriate.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1510: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:54: env = dict(SETUPTOOLS_USE_DISTUTILS='stdlib')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1511: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:55: assert venv.name not in find_distutils(venv, env=env).split(os.sep)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1512: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:59: def test_distutils_local_with_setuptools(venv):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1513: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:61: Ensure local distutils is used when appropriate.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1514: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:63: env = dict(SETUPTOOLS_USE_DISTUTILS='local')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1515: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:64: loc = find_distutils(venv, imports='setuptools, distutils', env=env)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1516: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:69: @pytest.mark.xfail('IS_PYPY', reason='pypy imports distutils on startup')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1517: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:70: def test_distutils_local(venv):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1518: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:72: Even without importing, the setuptools-local copy of distutils is
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1519: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:75: env = dict(SETUPTOOLS_USE_DISTUTILS='local')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1520: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:76: assert venv.name in find_distutils(venv, env=env).split(os.sep)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1521: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:89: def test_distutils_has_origin():
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1522: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:91: Distutils module spec should have an origin. #2990.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1523: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:93: assert __import__('distutils').__spec__.origin
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1524: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:97: # Depending on the importlib machinery and _distutils_hack, some imports are
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1525: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:102: from distutils import cmd
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1526: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:103: import distutils.command.sdist as sdist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1527: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:106: from distutils import {imported_module}
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1528: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:119: ('distutils_version', 'imported_module'),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1529: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:121: pytest.param("stdlib", "dir_util", marks=skip_without_stdlib_distutils),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1530: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:122: pytest.param("stdlib", "file_util", marks=skip_without_stdlib_distutils),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1531: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:123: pytest.param("stdlib", "archive_util", marks=skip_without_stdlib_distutils),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1532: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:129: def test_modules_are_not_duplicated_on_import(distutils_version, imported_module, venv):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1533: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:130: env = dict(SETUPTOOLS_USE_DISTUTILS=distutils_version)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1534: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:139: import distutils.dist as dist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1535: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:140: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1536: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:149: "distutils_version",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1537: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:152: pytest.param("stdlib", marks=skip_without_stdlib_distutils),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1538: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:155: def test_log_module_is_not_duplicated_on_import(distutils_version, venv):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1539: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:156: env = dict(SETUPTOOLS_USE_DISTUTILS=distutils_version)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1540: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:164: from {imported_module}.errors import DistutilsError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1541: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:169: except DistutilsError:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1542: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:178: ('distutils_version', 'imported_module'),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1543: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:180: ("local", "distutils"),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1544: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:181: # Unfortunately we still get ._distutils.errors.DistutilsError with SETUPTOOLS_USE_DISTUTILS=stdlib
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1545: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:184: "stdlib", "setuptools._distutils", marks=skip_without_stdlib_distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1546: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:188: def test_consistent_error_from_modified_py(distutils_version, imported_module, venv):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1547: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_distutils_adoption.py:189: env = dict(SETUPTOOLS_USE_DISTUTILS=distutils_version)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1548: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_editable_install.py:39: from distutils.core import run_setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1549: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_editable_install.py:76: [tool.distutils.egg_info]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1550: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_editable_install.py:1160: def install_custom_build_ext_distutils(self, dist):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1551: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_editable_install.py:1161: from distutils.command.build_ext import build_ext as build_ext_cls
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1552: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_editable_install.py:1171: def test_distutils_leave_inplace_files(self, tmpdir_cwd):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1553: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_editable_install.py:1179: self.install_custom_build_ext_distutils(dist)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1554: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_egg_info.py:38: '.pydistutils.cfg': DALS(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1555: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_egg_info.py:176: import distutils.errors
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1556: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_egg_info.py:179: with pytest.raises(distutils.errors.DistutilsFileError, match=msg):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1557: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_logging.py:26: import setuptools  # noqa: F401  # import setuptools to monkeypatch distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1558: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_logging.py:28: import distutils  # <- load distutils after all the patches take place
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1559: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_logging.py:37: dist = distutils.core.run_setup(setup_script, stop_after="init")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1560: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_logging.py:63: import _distutils_hack
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1561: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_logging.py:67: from distutils import dist
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1562: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_logging.py:71: if _distutils_hack.enabled():
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1563: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_manifest.py:20: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1564: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_manifest.py:21: from distutils.errors import DistutilsTemplateError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1565: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_manifest.py:337: A copy of the relevant bits of distutils/tests/test_filelist.py,
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1566: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_manifest.py:338: to ensure setuptools' version of FileList keeps parity with distutils.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1567: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_manifest.py:341: @pytest.fixture(autouse=os.getenv("SETUPTOOLS_USE_DISTUTILS") == "stdlib")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1568: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_manifest.py:347: rec = logging.LogRecord("distutils", level, "", 0, msg, args, exc)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1569: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_manifest.py:485: with pytest.raises(DistutilsTemplateError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1570: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:29: import distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1571: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:30: from distutils.core import run_setup
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1572: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:109: skip_under_stdlib_distutils = pytest.mark.skipif(
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1573: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:110: not distutils.__package__.startswith('setuptools'),
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1574: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:111: reason="the test is not supported with stdlib distutils",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1575: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:275: @skip_under_stdlib_distutils
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1576: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:325: from distutils.command.build_py import build_py as OrigBuildPy
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1577: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:331: Some projects have custom commands inheriting from `distutils`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1578: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:351: msg = "setuptools instead of distutils"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1579: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:835: @pytest.mark.skipif("os.environ.get('SETUPTOOLS_USE_DISTUTILS') == 'stdlib'")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1580: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:16: import distutils.cmd
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1581: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:17: import distutils.core
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1582: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:18: from distutils.core import Extension
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1583: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:19: from distutils.errors import DistutilsSetupError
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1584: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:30: distutils.core._setup_stop_after = "commandline"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1585: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:38: distutils.core._setup_stop_after = None
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1586: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:205: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1587: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:207: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1588: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:209: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1589: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:211: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1590: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:213: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1591: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:215: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1592: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:218: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1593: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_setuptools.py:220: with pytest.raises(DistutilsSetupError):
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1594: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_wheel.py:27: from distutils.sysconfig import get_config_var
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1595: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\tests\test_wheel.py:28: from distutils.util import get_platform
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1596: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\wheel.py:25: from distutils.util import get_platform
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1597: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools\wheel.py:72: from distutils import log
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1598: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools-80.9.0.dist-info\entry_points.txt:1: [distutils.commands]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1599: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools-80.9.0.dist-info\entry_points.txt:24: [distutils.setup_keywords]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1600: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\setuptools-80.9.0.dist-info\top_level.txt:1: _distutils_hack
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1601: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sklearn\ensemble\tests\test_forest.py:368: imp = 0.0
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1602: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sklearn\ensemble\tests\test_forest.py:393: imp += (
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1603: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sklearn\impute\tests\test_impute.py:1757: imp = SimpleImputer().fit(X)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1604: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sklearn\utils\_optional_dependencies.py:21: "`pip install matplotlib`".format(caller_name)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1605: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sympy\conftest.py:20: "Install it with 'pip install hypothesis' or 'conda install -c conda-forge hypothesis'"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1606: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sympy\core\function.py:557: imp = getattr(self, '_imp_', None)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1607: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sympy\core\function.py:558: if imp is None:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1608: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sympy\external\importtools.py:35: # Simplified from distutils.version.LooseVersion which was deprecated in
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1609: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sympy\utilities\_compilation\util.py:216: # distutils: language = c++
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1610: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sympy\utilities\_compilation\util.py:263: from imp import find_module, load_module
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1611: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sympy\utilities\lambdify.py:1414: imp = getattr(func, '_imp_', None)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1612: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sympy\utilities\lambdify.py:1415: if imp is not None:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1613: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\sympy\utilities\tests\test_lambdify.py:1088: # Check that imp preferred to other namespaces by default
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1614: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\tokenizers\implementations\sentencepiece_unigram.py:156: "You don't seem to have the required protobuf file, in order to use this function you need to run `pip install protobuf` and `wget https://raw.githubusercontent.com/google/sentencepiece/master/python/src/sentencepiece/sentencepiece_model_pb2.py` for us to be able to read the intrinsics of your spm_file. `pip install sentencepiece` is not required."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1615: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\__init__.py:1021: $ python -m pip install --no-build-isolation -v . && python -c "import torch"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1616: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\__init__.py:1024: $ python -m pip install --no-build-isolation -v -e . && python -c "import torch"  # This should succeed
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1617: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\_dynamo\backends\distributed.py:136: "Please `pip install tabulate` in order to display ddp bucket sizes and diagnostic information."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1618: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\_dynamo\replay_record.py:56: assert dill is not None, "replay_record requires `pip install dill`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1619: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\_dynamo\replay_record.py:61: assert dill is not None, "replay_record requires `pip install dill`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1620: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\_inductor\comms.py:667: "Please `pip install tabulate` to nicely render overlap stats.\n"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1621: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\_inductor\comms.py:1221: log_str += "Please `pip install tabulate` to nicely render overlap stats.\n"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1622: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\_inductor\config.py:1758: # Install with `pip install git+https://github.com/rocm/composable_kernel@develop`.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1623: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\_inductor\utils.py:1988: log.warning("Please pip install Composable Kernel package")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1624: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\_numpy\_util.py:12: # https://github.com/numpy/numpy/blob/v1.23.0/numpy/distutils/misc_util.py#L497-L504
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1625: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\backends\opt_einsum\__init__.py:22: make opt-einsum available, you can install it along with torch: ``pip install torch[opt-einsum]``
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1626: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\backends\opt_einsum\__init__.py:23: or by itself: ``pip install opt-einsum``. If the package is installed, torch will import
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1627: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\distributed\_tools\sac_estimator.py:626: "Install matplotlib and numpy using pip: pip install matplotlib numpy"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1628: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\functional.py:227: performant einsum. You can install when installing torch like so: `pip install torch[opt-einsum]` or by itself
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1629: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\functional.py:228: with `pip install opt-einsum`.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1630: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\onnx\_internal\torchscript_exporter\symbolic_opset14.py:198: # This is because there's no safe softmax imp in ONNX, so we need to handle NaN values explicitly to match
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1631: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\package\_stdlib.py:79: "distutils",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1632: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\sparse\_triton_ops_meta.py:63: python -m pip install --no-build-isolation -v -e .
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1633: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\testing\_internal\common_utils.py:5679: warnings.warn("`pip install objgraph` to enable memory leak debugging")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1634: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\_cxx_pytree.py:41: "`python3 -m pip install --upgrade optree`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1635: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\benchmark\utils\compile.py:23: print("tabulate is not installed, please pip install tabulate to use this utility")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1636: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\benchmark\utils\compile.py:130: Many of the backendds have their own optional dependencies so please pip install them separately
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1637: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:601: Fallbacks to the standard distutils backend if Ninja is not available.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1638: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:628: '%s. Falling back to using the slow distutils backend.')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1639: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:778: # of distutils.UnixCCompiler). See the following link.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1640: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:779: # https://github.com/python/cpython/blob/f03a8f8d5001963ad5b5b28dbd95497e9cc15596/Lib/distutils/ccompiler.py#L564-L567  # codespell:ignore
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1641: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:783: # we update our python version (which is when distutils can be
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1642: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:1070: # https://github.com/python/cpython/blob/dc0284ee8f7a270b6005467f26d8e5773d76e959/Lib/distutils/ccompiler.py#L511  # codespell:ignore
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1643: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:1108: if IS_WINDOWS and 'VSCMD_ARG_TGT_ARCH' in os.environ and 'DISTUTILS_USE_SDK' not in os.environ:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1644: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:1109: msg = ('It seems that the VC environment is activated but DISTUTILS_USE_SDK is not set.'
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1645: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:1111: 'Please set `DISTUTILS_USE_SDK=1` and try again.')
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1646: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:2305: raise RuntimeError("Ninja is required to load C++ extensions (pip install ninja to get it)")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1647: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:2553: from setuptools import distutils  # type: ignore[attr-defined]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1648: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:2554: return distutils._msvccompiler._get_vc_env(vc_arch)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1649: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:2557: from setuptools._distutils import _msvccompiler
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1650: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:2560: from setuptools._distutils.compilers.C import msvc
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1651: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:2571: from setuptools import distutils  # type: ignore[attr-defined]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1652: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\cpp_extension.py:2573: plat_name = distutils.util.get_platform()
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1653: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\data\datapipes\utils\decoder.py:186: "Please use `pip install numpy` to install the package"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1654: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\data\datapipes\utils\decoder.py:194: "Please use `pip install Pillow` to install the package"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1655: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\data\datapipes\utils\decoder.py:246: "Please use `pip install torchvision`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1656: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\data\datapipes\utils\decoder.py:269: "Please use `pip install torchaudio`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1657: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\torch\utils\data\datapipes\utils\decoder.py:290: "Please use `pip install scipy`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1658: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\tqdm\contrib\slack.py:17: raise ImportError("Please `pip install slack-sdk`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1659: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\activations_tf.py:30: "`pip install tf-keras`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1660: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\cache_utils.py:1639: >>> # Run pip install quanto first if you don't have it yet
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1661: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\cache_utils.py:1680: >>> # Run pip install hqq first if you don't have it yet
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1662: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\commands\add_fast_image_processor.py:89: imports = [imp.strip() for imp in imports]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1663: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\commands\add_fast_image_processor.py:229: existing_imports = [imp.strip() for imp in existing_imports]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1664: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\commands\add_new_model_like.py:502: raise ValueError("You need to install `libcst` to run this command -> `pip install libcst`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1665: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\commands\chat.py:264: "which case you must install this manually by running `pip install flash-attn --no-build-isolation`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1666: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\commands\chat.py:349: "endpoint and are therefore spawning a backend. Torch is required for this: (`pip install rich torch`)"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1667: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\commands\chat.py:352: raise ImportError("You need to install rich to use the chat interface. (`pip install rich`)")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1668: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\commands\chat.py:356: "for this: (`pip install rich torch`)"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1669: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\commands\serving.py:373: "which case you must install this manually by running `pip install flash-attn --no-build-isolation`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1670: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\commands\serving.py:449: "Missing dependencies for the serving CLI. Please install with `pip install transformers[serving]`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1671: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\commands\serving.py:1366: "Missing librosa dependency for audio transcription. Please install with `pip install librosa`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1672: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\convert_graph_to_onnx.py:123: "Please update onnxruntime by running `pip install --upgrade onnxruntime`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1673: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\convert_graph_to_onnx.py:129: "Please install the onnxruntime by running `pip install onnxruntime`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1674: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\convert_slow_tokenizer.py:1597: "`tiktoken` is required to read a `tiktoken` file. Install it with `pip install tiktoken`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1675: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\dynamic_module_utils.py:211: for imp in imports:
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1676: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\dynamic_module_utils.py:227: f"{', '.join(missing_packages)}. Run `pip install {' '.join(missing_packages)}`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1677: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\generation\utils.py:2075: "Please install it via  with `pip install optimum-quanto`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1678: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\generation\utils.py:2080: "Please install it via  with `pip install hqq`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1679: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\hyperparameter_search.py:61: return f"`pip install {cls.pip_package or cls.name}`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1680: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\aqlm.py:50: raise ValueError("AQLM is not available. Please install it with `pip install aqlm[cpu,gpu]`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1681: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\aqlm.py:54: f"AQLM requires Accelerate to be installed: `pip install 'accelerate>={ACCELERATE_MIN_VERSION}'`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1682: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\awq.py:129: "AWQ (either `autoawq` or `llmawq`) is not available. Please install it with `pip install autoawq` or check out the installation guide in https://github.com/mit-han-lab/llm-awq"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1683: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\bitsandbytes.py:109: "Make sure to download the latest `bitsandbytes` version. `pip install --upgrade bitsandbytes`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1684: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\bitsandbytes.py:122: "Make sure to download the latest `bitsandbytes` version. `pip install --upgrade bitsandbytes`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1685: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\bitsandbytes.py:233: version of your hardware is installed before running this function. `pip install -i https://test.pypi.org/simple/
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1686: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\hub_kernels.py:97: raise RuntimeError("LayerRepository requires `kernels` to be installed. Run `pip install kernels`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1687: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\hub_kernels.py:101: "replace_kernel_forward_from_hub requires `kernels` to be installed. Run `pip install kernels`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1688: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\hub_kernels.py:105: raise RuntimeError("register_kernel_mapping requires `kernels` to be installed. Run `pip install kernels`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1689: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:146: "Please update comet_ml to the latest version to enable Comet logging with pip install 'comet-ml>=%s'.",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1690: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:550: raise ImportError("This function needs wandb installed: `pip install wandb`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1691: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:822: raise RuntimeError("WandbCallback requires wandb to be installed. Run `pip install wandb`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1692: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:1074: pip install trackio
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1693: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:1081: raise RuntimeError("TrackioCallback requires trackio to be installed. Run `pip install trackio`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1694: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:1195: f"CometCallback requires comet-ml>={_MIN_COMET_VERSION} to be installed. Run `pip install comet-ml>={_MIN_COMET_VERSION}`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1695: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:1334: raise RuntimeError("AzureMLCallback requires azureml to be installed. Run `pip install azureml-sdk`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1696: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:1358: raise RuntimeError("MLflowCallback requires mlflow to be installed. Run `pip install mlflow`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1697: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:1539: raise ImportError("DagsHubCallback requires dagshub to be installed. Run `pip install dagshub`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1698: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:1642: "To install the library, run `pip install neptune`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1699: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:1872: "CodeCarbonCallback requires `codecarbon` to be installed. Run `pip install codecarbon`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1700: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:1935: raise RuntimeError("ClearMLCallback requires 'clearml' to be installed. Run `pip install clearml`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1701: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:2179: raise ImportError("FlyteCallback requires flytekit to be installed. Run `pip install flytekit`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1702: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:2184: "Run `pip install flytekitplugins-deck-standard pandas` to enable this feature."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1703: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:2235: raise RuntimeError("DVCLiveCallback requires dvclive to be installed. Run `pip install dvclive`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1704: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\integration_utils.py:2324: raise RuntimeError("SwanLabCallback requires swanlab to be installed. Run `pip install swanlab`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1705: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\peft.py:455: raise ImportError("PEFT is not available. Please install PEFT to use this function: `pip install peft`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1706: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\integrations\tiktoken.py:38: raise ValueError("`tiktoken` is required to save a `tiktoken` file. Install it with `pip install tiktoken`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1707: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\modeling_tf_utils.py:102: "`pip install tf-keras`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1708: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\modeling_utils.py:1469: "`accelerate` to properly deal with them (`pip install --upgrade accelerate`)."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1709: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\modeling_utils.py:1644: raise ImportError("You need to install psutil (pip install psutil) to use memory tracing.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1710: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\modeling_utils.py:1656: raise ImportError("You need to install psutil (pip install psutil) to use memory tracing.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1711: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\modeling_utils.py:1876: " make sure to install bitsandbytes with `pip install bitsandbytes`. You also need a GPU. "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1712: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\modeling_utils.py:2728: raise ValueError("kernels is not installed. Please install it with `pip install kernels`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1713: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\modeling_utils.py:3880: raise ImportError("`safe_serialization` requires the `safetensors library: `pip install safetensors`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1714: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\modeling_utils.py:4156: f"Please upgrade accelerate with `pip install -U accelerate`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1715: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\modeling_utils.py:4719: raise ValueError("accelerate is required when loading a GGUF file `pip install accelerate`.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1716: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\modeling_utils.py:4799: "requires `accelerate`. You can install it with `pip install accelerate`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1717: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\modeling_utils.py:5101: "Kernels are not available. To use kernels, please install kernels using `pip install kernels`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1718: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\audio_spectrogram_transformer\modeling_audio_spectrogram_transformer.py:450: `torch.Tensor`, *e.g.* via the torchcodec library (`pip install torchcodec`) or the soundfile library
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1719: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\audio_spectrogram_transformer\modeling_audio_spectrogram_transformer.py:451: (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1720: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\audio_spectrogram_transformer\modeling_audio_spectrogram_transformer.py:542: the torchcodec library (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1721: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\auto\configuration_auto.py:1277: "You can update Transformers with the command `pip install --upgrade transformers`. If this "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1722: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\auto\configuration_auto.py:1281: "`pip install git+https://github.com/huggingface/transformers.git`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1723: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\data2vec\modeling_data2vec_audio.py:1023: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1724: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\data2vec\modeling_data2vec_audio.py:1138: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1725: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\data2vec\modeling_data2vec_audio.py:1321: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1726: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\deprecated\xlm_prophetnet\tokenization_xlm_prophetnet.py:133: " pip install sentencepiece"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1727: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\deprecated\xlm_prophetnet\tokenization_xlm_prophetnet.py:184: " pip install sentencepiece"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1728: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\dia\processing_dia.py:111: "find it in your environment. You can install torch via `pip install torch`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1729: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\flaubert\tokenization_flaubert.py:310: logger.error("5. pip install kytea")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1730: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\flaubert\tokenization_flaubert.py:385: - Install with `pip install sacremoses`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1731: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\fsmt\modeling_fsmt.py:107: (don't forget to install sacrebleu: `pip install sacrebleu`)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1732: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\fsmt\tokenization_fsmt.py:329: - Install with `pip install sacremoses`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1733: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\herbert\tokenization_herbert.py:426: logger.error("5. pip install kytea")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1734: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\hubert\modeling_hubert.py:1229: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1735: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\marian\tokenization_marian.py:175: warnings.warn("Recommended: pip install sacremoses.")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1736: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modeling_moonshine.py:529: `numpy.ndarray` or a `torch.Tensor`, *e.g.* via the torchcodec libary (`pip install torchcodec`) or
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1737: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modeling_moonshine.py:530: the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1738: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modeling_moonshine.py:906: `numpy.ndarray` or a `torch.Tensor`, *e.g.* via the torchcodec libary (`pip install torchcodec`) or
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1739: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modeling_moonshine.py:907: the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1740: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modeling_moonshine.py:1028: `numpy.ndarray` or a `torch.Tensor`, *e.g.* via the torchcodec libary (`pip install torchcodec`) or
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1741: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modeling_moonshine.py:1029: the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1742: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modular_moonshine.py:564: `numpy.ndarray` or a `torch.Tensor`, *e.g.* via the torchcodec libary (`pip install torchcodec`) or
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1743: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modular_moonshine.py:565: the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1744: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modular_moonshine.py:741: `numpy.ndarray` or a `torch.Tensor`, *e.g.* via the torchcodec libary (`pip install torchcodec`) or
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1745: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modular_moonshine.py:742: the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1746: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modular_moonshine.py:847: `numpy.ndarray` or a `torch.Tensor`, *e.g.* via the torchcodec libary (`pip install torchcodec`) or
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1747: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\moonshine\modular_moonshine.py:848: the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1748: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\sew\modeling_sew.py:1047: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1749: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\sew_d\modeling_sew_d.py:1601: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1750: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\smolvlm\processing_smolvlm.py:172: "Package `num2words` is required to run SmolVLM processor. Install it with `pip install num2words`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1751: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speech_encoder_decoder\modeling_flax_speech_encoder_decoder.py:90: via the torchcodec library (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1752: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speech_encoder_decoder\modeling_flax_speech_encoder_decoder.py:133: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1753: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speech_encoder_decoder\modeling_speech_encoder_decoder.py:343: via the torchcodec library (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1754: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speech_encoder_decoder\modeling_speech_encoder_decoder.py:374: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1755: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speech_to_text\modeling_speech_to_text.py:608: `numpy.ndarray` or a `torch.Tensor`, *e.g.* via the torchcodec libary (`pip install torchcodec`) or
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1756: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speech_to_text\modeling_speech_to_text.py:609: the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1757: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speech_to_text\modeling_tf_speech_to_text.py:694: `torch.Tensor``, *e.g.* via the torchcodec library (`pip install torchcodec`) or the soundfile library
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1758: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speech_to_text\modeling_tf_speech_to_text.py:695: (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1759: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speech_to_text\modeling_tf_speech_to_text.py:852: `numpy.ndarray` or a `torch.Tensor`, *e.g.* via the torchcodec libary (`pip install torchcodec`) or
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1760: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speech_to_text\modeling_tf_speech_to_text.py:853: the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1761: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speecht5\modeling_speecht5.py:2177: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1762: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speecht5\modeling_speecht5.py:2858: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1763: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speecht5\modeling_speecht5.py:2985: a `numpy.ndarray` or a `torch.Tensor`, *e.g.* via the torchcodec library (`pip install torchcodec`)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1764: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\speecht5\modeling_speecht5.py:2986: or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1765: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\unispeech\modeling_unispeech.py:1456: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1766: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\unispeech_sat\modeling_unispeech_sat.py:1451: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1767: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\unispeech_sat\modeling_unispeech_sat.py:1566: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1768: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\unispeech_sat\modeling_unispeech_sat.py:1749: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1769: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\vits\tokenization_vits.py:180: "step automatically, ensure the `uroman` Romanizer is installed with: `pip install uroman` "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1770: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\voxtral\modeling_voxtral.py:335: `numpy.ndarray`, *e.g.* via the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1771: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\voxtral\modeling_voxtral.py:441: `numpy.ndarray`, *e.g.* via the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1772: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\voxtral\modular_voxtral.py:79: `numpy.ndarray`, *e.g.* via the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1773: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\voxtral\modular_voxtral.py:176: `numpy.ndarray`, *e.g.* via the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1774: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\wav2vec2\modeling_flax_wav2vec2.py:259: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1775: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\wav2vec2\modeling_wav2vec2.py:1982: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1776: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\wav2vec2\modeling_wav2vec2.py:2097: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1777: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\wav2vec2\modeling_wav2vec2.py:2280: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1778: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\wav2vec2_conformer\modeling_wav2vec2_conformer.py:1583: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1779: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\wav2vec2_conformer\modeling_wav2vec2_conformer.py:1686: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1780: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\wav2vec2_conformer\modeling_wav2vec2_conformer.py:1857: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1781: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\wavlm\modeling_wavlm.py:1332: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1782: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\wavlm\modeling_wavlm.py:1447: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1783: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\wavlm\modeling_wavlm.py:1630: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1784: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\whisper\generation_whisper.py:434: *e.g.*  via the torchcodec library (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1785: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\whisper\generation_whisper.py:1636: the soundfile library (`pip install soundfile`). To prepare the array into `input_features`, the
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1786: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\whisper\modeling_flax_whisper.py:105: `torch.Tensor`, *e.g.* via the torchcodec library (`pip install torchcodec`) or the soundfile library
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1787: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\whisper\modeling_flax_whisper.py:106: (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1788: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\whisper\modeling_flax_whisper.py:144: the torchcodec library (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1789: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\whisper\modeling_tf_whisper.py:603: `torch.Tensor`, *e.g.* via the torchcodec library (`pip install torchcodec`) or the soundfile library
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1790: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\whisper\modeling_tf_whisper.py:604: (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1791: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\whisper\modeling_tf_whisper.py:733: `numpy.ndarray` or a `torch.Tensor`, *e.g.* via the torchcodec libary (`pip install torchcodec`) or
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1792: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\whisper\modeling_tf_whisper.py:734: the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1793: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\whisper\modeling_whisper.py:644: `numpy.ndarray` or a `torch.Tensor`, *e.g.* via the torchcodec libary (`pip install torchcodec`) or
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1794: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\whisper\modeling_whisper.py:645: the soundfile library (`pip install soundfile`). To prepare the array into
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1795: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\xlm\tokenization_xlm.py:311: logger.error("5. pip install kytea")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1796: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\xlm\tokenization_xlm.py:374: - Install with `pip install sacremoses`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1797: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\xlm\tokenization_xlm.py:376: - Install with `pip install pythainlp`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1798: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\xlm\tokenization_xlm.py:384: make && make install pip install kytea
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1799: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\xlm\tokenization_xlm.py:387: - Install with `pip install jieba`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1800: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\xlm\tokenization_xlm.py:430: logger.error("1. pip install pythainlp")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1801: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\xlm\tokenization_xlm.py:441: logger.error("1. pip install jieba")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1802: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\zamba\modeling_zamba.py:566: "the mamba module is on a CUDA device. lease run 'pip install causal-conv1d>=1.2.0' "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1803: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\models\zamba\modeling_zamba.py:567: "and 'pip install mamba-ssm', or set use_mamba_kernels=False in the model's config."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1804: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\onnx\__main__.py:43: "can upgrade optimum by running: pip install -U optimum[exporters]"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1805: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\onnx\__main__.py:47: "transformers.onnx requires optimum to run, you can install the library by running: pip install "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1806: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\onnx\convert.py:72: "Please update onnxruntime by running `pip install --upgrade onnxruntime`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1807: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\onnx\convert.py:78: "Please install the onnxruntime by running `pip install onnxruntime`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1808: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\pipelines\__init__.py:1141: logger.warning("Try to install `kenlm`: `pip install kenlm")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1809: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\pipelines\__init__.py:1144: logger.warning("Try to install `pyctcdecode`: `pip install pyctcdecode")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1810: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\pipelines\audio_classification.py:223: "The torchaudio package can be installed through: `pip install torchaudio`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1811: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\pipelines\automatic_speech_recognition.py:415: "The torchaudio package can be installed through: `pip install torchaudio`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1812: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_aqlm.py:51: raise ImportError("Using `aqlm` quantization requires Accelerate: `pip install accelerate`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1813: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_aqlm.py:54: raise ImportError("Using `aqlm` quantization requires AQLM: `pip install aqlm[gpu,cpu]`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1814: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_aqlm.py:92: f"Currently installed `aqlm` version ({importlib.metadata.version('aqlm')}) doesn't support training. If you wish to train a quantized model, please update `aqlm` with `pip install aqlm>=1.0.2`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1815: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_auto_round.py:48: "Loading an AutoRound quantized model requires auto-round library (`pip install 'auto-round>=0.5'`)"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1816: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_awq.py:50: raise ImportError("Loading an AWQ quantized model requires auto-awq library (`pip install autoawq`)")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1817: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_awq.py:53: raise ImportError("Loading an AWQ quantized model requires accelerate (`pip install accelerate`)")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1818: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_bitnet.py:51: raise ImportError("Loading a BitNet quantized model requires accelerate (`pip install accelerate`)")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1819: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_bnb_4bit.py:73: f"Using `bitsandbytes` 4-bit quantization requires Accelerate: `pip install 'accelerate>={ACCELERATE_MIN_VERSION}'`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1820: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_bnb_4bit.py:77: "Using `bitsandbytes` 4-bit quantization requires the latest version of bitsandbytes: `pip install -U bitsandbytes`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1821: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_bnb_4bit.py:82: "You can install it with `pip install torch`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1822: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_bnb_4bit.py:137: "`pip install --upgrade accelerate` or install it from source to support fp4 auto device map"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1823: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_bnb_4bit.py:213: "Make sure to download the latest `bitsandbytes` version. `pip install --upgrade bitsandbytes`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1824: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_bnb_8bit.py:70: f"Using `bitsandbytes` 8-bit quantization requires Accelerate: `pip install 'accelerate>={ACCELERATE_MIN_VERSION}'`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1825: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_bnb_8bit.py:74: "Using `bitsandbytes` 8-bit quantization requires the latest version of bitsandbytes: `pip install -U bitsandbytes`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1826: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_bnb_8bit.py:79: "You can install it with `pip install torch`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1827: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_bnb_8bit.py:229: "Make sure to download the latest `bitsandbytes` version. `pip install --upgrade bitsandbytes`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1828: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_compressed_tensors.py:45: "`pip install compressed-tensors`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1829: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_compressed_tensors.py:101: "`pip install compressed-tensors`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1830: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_eetq.py:71: raise ImportError("Loading an EETQ quantized model requires accelerate (`pip install accelerate`)")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1831: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_fbgemm_fp8.py:51: "Please install the latest version of torch ( pip install --upgrade torch )"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1832: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_fbgemm_fp8.py:61: "Loading an FP8 quantized model requires accelerate > 0.32.1 (`pip install --upgrade accelerate`)"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1833: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_finegrained_fp8.py:35: "Please install the latest version of torch ( pip install --upgrade torch )"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1834: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_finegrained_fp8.py:39: raise ImportError("Loading an FP8 quantized model requires accelerate (`pip install accelerate`)")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1835: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_fp_quant.py:55: "Using `fp_quant` with real quantization requires a **Blackwell GPU** and qutlass: `git clone https://github.com/IST-DASLab/qutlass.git && cd qutlass && pip install --no-build-isolation .`. You can use `FPQuantConfig(pseudoquantization=True, ...)` to use Triton-based pseudo-quantization. It doesn't provide any speedups but emulates the quantization behavior of the real quantization."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1836: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_fp_quant.py:64: raise ImportError("Using `fp_quant` quantization requires fp_quant: `pip install fp_quant`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1837: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_gptq.py:49: raise ImportError("Loading a GPTQ quantized model requires optimum (`pip install optimum`)")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1838: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_gptq.py:56: raise ImportError("Loading a GPTQ quantized model requires optimum (`pip install optimum`)")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1839: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_gptq.py:68: "Loading a GPTQ quantized model requires gptqmodel (`pip install gptqmodel`) or auto-gptq (`pip install auto-gptq`) library. "
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1840: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_gptq.py:74: "You need a version of auto_gptq >= 0.4.2 to use GPTQ: `pip install --upgrade auto-gptq` or use gptqmodel by `pip install gptqmodel>=1.4.3`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1841: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_higgs.py:52: raise ImportError("Using `higgs` quantization requires Accelerate: `pip install accelerate`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1842: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_higgs.py:55: raise ImportError("Using `higgs` quantization requires FLUTE: `pip install flute-kernel>=0.3.0`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1843: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_higgs.py:59: "Using `higgs` quantization requires fast_hadamard_transform: `pip install fast_hadamard_transform`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1844: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_mxfp4.py:57: "Please install the latest version of torch ( pip install --upgrade torch )"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1845: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_mxfp4.py:74: raise ImportError("Using mxfp4 requires Accelerate: `pip install accelerate`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1846: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_quanto.py:67: "Loading an optimum-quanto quantized model requires optimum-quanto library (`pip install optimum-quanto`)"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1847: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_quanto.py:71: "Loading an optimum-quanto quantized model requires accelerate library (`pip install accelerate`)"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1848: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_quanto.py:176: "`pip install --upgrade accelerate` or install it from source."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1849: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_spqr.py:49: raise ImportError("Using `spqr` quantization requires Accelerate: `pip install accelerate`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1850: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_spqr.py:52: raise ImportError("Using `spqr` quantization requires SpQR: `pip install spqr_quant[gpu]`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1851: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_torchao.py:98: raise ImportError("Loading an torchao quantized model requires torchao library (`pip install torchao`)")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1852: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_torchao.py:174: "`pip install --upgrade accelerate`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1853: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_vptq.py:46: raise ImportError("Using `vptq` quantization requires Accelerate: `pip install accelerate`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1854: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\quantizers\quantizer_vptq.py:49: raise ImportError("Using `vptq` quantization requires VPTQ>=0.0.4: `pip install -U vptq`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1855: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\tokenization_mistral_common.py:165: pip install transformers[mistral-common]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1856: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer.py:544: "Please install it with `pip install liger-kernel`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1857: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer.py:1569: " install it with `pip install git+https://github.com/jiaweizzhao/GaLore`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1858: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer.py:1601: " install it with `pip install git+https://github.com/zhuhanqing/APOLLO`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1859: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer.py:1627: " install it with `pip install lomo-optim`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1860: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer.py:1645: raise ValueError("Please install grokadamw with `pip install grokadamw`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1861: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer.py:1668: "Install it with `pip install torchao` or follow the instructions here: https://github.com/pytorch/ao"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1862: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer.py:1673: "Install it with `pip install --upgrade torch` it is available on pipy. Otherwise, you need to install torch nightly."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1863: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer.py:1695: "Install it with `pip install schedulefree.`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1864: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer.py:1708: "Install it with `pip install schedulefree.`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1865: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer.py:1737: "Install it with `pip install torch-optimi`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1866: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer_pt_utils.py:980: In order to get memory usage report you need to install `psutil`. You can do that with `pip install psutil`.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1867: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer_utils.py:301: assert is_optuna_available(), "This function needs Optuna installed: `pip install optuna`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1868: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer_utils.py:313: assert is_ray_tune_available(), "This function needs ray installed: `pip install ray[tune]`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1869: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer_utils.py:341: raise ImportError("This function needs wandb installed: `pip install wandb`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1870: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\trainer_utils.py:453: This class will silently skip unless `psutil` is available. Install with `pip install psutil`.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1871: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\training_args.py:716: CUDA Out-of-Memory errors. Requires accelerate to be installed (`pip install accelerate`)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1872: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\training_args.py:2050: f"--deepspeed requires Accelerate to be installed: `pip install 'accelerate>={ACCELERATE_MIN_VERSION}'`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1873: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\training_args.py:2194: f"Please run `pip install transformers[torch]` or `pip install 'accelerate>={ACCELERATE_MIN_VERSION}'`"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1874: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\training_args.py:3090: avoiding CUDA Out-of-Memory errors. Requires accelerate to be installed (`pip install accelerate`)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1875: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\auto_docstring.py:253: (`pip install torchcodec`) or the soundfile library (`pip install soundfile`).
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1876: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\chat_template_utils.py:395: "apply_chat_template requires jinja2 to be installed. Please install it using `pip install jinja2`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1877: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\generic.py:81: # vendored from distutils.util
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1878: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1634: pip install av
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1879: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1643: pip install yt-dlp
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1880: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1651: pip install decord
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1881: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1659: pip install torchcodec
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1882: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1668: pip install opencv-python
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1883: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1678: pip install datasets
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1884: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1682: !pip install datasets
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1885: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1696: pip install tokenizers
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1886: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1700: !pip install tokenizers
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1887: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1772: `pip install beautifulsoup4`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1888: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1780: pip install -U scikit-learn
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1889: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1784: !pip install -U scikit-learn
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1890: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1828: `pip install g2p-en`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1891: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1834: `pip install pytorch-quantization --extra-index-url https://pypi.ngc.nvidia.com`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1892: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1868: `pip install phonemizer`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1893: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1873: `pip install uroman`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1894: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1880: `pip install sacremoses`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1895: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1886: `pip install scipy`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1896: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1898: `pip install torchaudio`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1897: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1904: `pip install timm`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1898: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1911: `pip install natten`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1899: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1930: `pip install pillow`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1900: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1936: `pip install pydantic`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1901: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1942: `pip install fastapi`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1902: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1948: `pip install uvicorn`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1903: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1954: `pip install openai`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1904: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1960: `pip install pytesseract`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1905: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1966: `pip install pyctcdecode`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1906: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1972: You can install or update it with pip: `pip install --upgrade accelerate`. Please note that you may need to restart your
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1907: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1979: `pip install oneccl_bind_pt -f https://developer.intel.com/ipex-whl-stable`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1908: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1986: `pip install essentia==2.1b6.dev1034`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1909: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:1993: `pip install librosa`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1910: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:2000: `pip install pretty_midi`
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1911: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\import_utils.py:2031: {0} requires the mistral-common library but it was not found in your environment. You can install it with pip: `pip install mistral-common`. Please note that you may need to restart your runtime after installation.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1912: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\peft_utils.py:117: raise ValueError("PEFT is not installed. Please install it with `pip install peft`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1913: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\quantization_config.py:1329: "compressed_tensors is not installed and is required for compressed-tensors quantization. Please install it with `pip install compressed-tensors`."
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1914: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\quantization_config.py:1700: raise ValueError("TorchAoConfig requires torchao to be installed. Install with `pip install torchao`")
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1915: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\transformers\utils\versions.py:116: hint = "Try: `pip install transformers -U` or `pip install -e '.[dev]'` if you're working with git main"
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1916: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\urllib3\contrib\pyopenssl.py:20: $ python -m pip install pyopenssl cryptography idna
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1917: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\uvicorn\middleware\wsgi.py:85: "Uvicorn's native WSGI implementation is deprecated, you should switch to a2wsgi (`pip install a2wsgi`).",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1918: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\uvicorn\protocols\http\h11_impl.py:157: msg = "No supported WebSocket library detected. Please use \"pip install 'uvicorn[standard]'\", or install 'websockets' or 'wsproto' manually."  # noqa: E501
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1919: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\uvicorn\protocols\http\httptools_impl.py:160: msg = "No supported WebSocket library detected. Please use \"pip install 'uvicorn[standard]'\", or install 'websockets' or 'wsproto' manually."  # noqa: E501
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1920: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\websockets\asyncio\router.py:88: $ pip install werkzeug
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1921: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\websockets\sync\router.py:88: $ pip install werkzeug
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1922: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\wheel\_bdist_wheel.py:410: # (distutils.command.install:change_roots bug)
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1923: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\wheel\_setuptools_logging.py:16: for compatibility with distutils.log but may change in
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1924: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\wheel\cli\convert.py:206: these come straight from the distutils metadata, and are mandatory.
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1925: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\.venv\Lib\site-packages\wheel-0.45.1.dist-info\entry_points.txt:4: [distutils.commands]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1926: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:38: Get-ChildItem -Path . -Recurse -File | Where-Object { <span>_.Name -match '\\.(ps1|psm1|bat|cmd|sh|py|yml|yaml|toml|cfg|ini|md|txt)</span>' } | Select-String -Pattern @('py -3.14','python3.14','python-version: 3.14','python-version: ''3.14''','python-version: "3.14"','pip install ','python -m pip','distutils',' imp ') -AllMatches | ForEach-Object { "{0}:{1}: {2}" -f <span>_.Path,</span>.LineNumber, $.Line.Trim() }
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1927: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:40: + ... ls',' imp ') -AllMatches | ForEach-Object { "{0}:{1}: {2}" -f <span>_ ...
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1928: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:44: + ... ',' imp ') -AllMatches | ForEach-Object { "{0}:{1}: {2}" -f <span>_.P ...
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1929: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:90: 'py -3.14',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1930: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:91: 'python3.14',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1931: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:92: 'python-version: 3.14',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1932: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:94: 'python-version: "3.14"',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1933: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:95: 'pip install ',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1934: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:96: 'python -m pip',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1935: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:97: 'distutils',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1936: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:98: ' imp '
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1937: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\experiences\LESSONS_LEARNED.md:113: Get-ChildItem -Path . -Recurse -File | Where-Object { <span>_.Name -match '\\.(ps1|psm1|bat|cmd|sh|py|yml|yaml|toml|cfg|ini|md|txt)</span>' } | Select-String -Pattern @('py -3.14','python3.14','python-version: 3.14','python-version: ''3.14''','python-version: "3.14"','pip install ','python -m pip','distutils',' imp ') -AllMatches | ForEach-Object { '{0}:{1}: {2}' -f <span>_.Path,</span>.LineNumber, $.Line.Trim() }
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1938: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\backups\firestickTASKS_20251014_163014.md:452: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1939: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\backups\firestickTASKS_20251015_133419.md:452: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1940: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\backups\firestickTASKS_20251015_134902.md:452: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1941: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\backups\firestickTASKS_20251015_140059.md:452: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1942: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\firestickEXAMPLES.md:1469: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1943: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\firestickEXAMPLES.md:2936: pip install optimum[onnxruntime]
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1944: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\firestickTASKS.md:452: pip install chromadb
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1945: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:13: 'py -3.14',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1946: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:14: 'python3.14',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1947: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:15: 'python-version: 3.14',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1948: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:16: "python-version: '3.14'",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1949: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:17: 'python-version: "3.14"',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1950: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:18: 'pip install ',          # prefer python -m pip
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1951: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:19: 'python -m pip',         # still list it so we can see current usage
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1952: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:20: 'distutils',             # deprecated
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scan_results.txt:1953: E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:21: ' imp '                  # suspicious: legacy module name
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:12: 'py -3.14',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:13: 'python3.14',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:14: 'python-version: 3.14',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:15: "python-version: '3.14'",
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:16: 'python-version: "3.14"',
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:17: 'pip install ',          # prefer python -m pip
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:18: 'python -m pip',         # still list it so we can see current usage
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:19: 'distutils',             # deprecated
E:\MyProjects\MyGitHubCopilot\firestick\fstk-001\tools\plans\scripts\scan_python_pins.ps1:20: ' imp '                  # suspicious: legacy module name
